# live-boot is smart enough to ask for mount.cifs, but
# live-boot is not smart enough to ask for kernel crypto modules needed for SMB3.
cmac

# Without "cmac", we get this error:
#
#    Begin: Trying nfsmount -o nolock -o ro -o ro,guest //10.0.2.4/qemu /run/live/medium ...
#    [    2.281093] CIFS: VFS: Could not allocate crypto cmac(aes)
#    [    2.333706] CIFS: VFS: Could not allocate crypto cmac(aes)
#    [    2.336670] CIFS: VFS: Could not allocate crypto cmac(aes)
#    [    2.339424] CIFS: VFS: Could not allocate crypto cmac(aes)
#    [    2.344070] CIFS: VFS: Could not allocate crypto md4
#    [    2.347290] CIFS: VFS: Could not allocate crypto cmac(aes)
#    [    2.350004] CIFS: VFS: Could not allocate crypto cmac(aes)
#    [    2.350006] CIFS: VFS: \\10.0.2.4 generate_key: crypto alloc failed
#    [    2.350016] CIFS: VFS: \\10.0.2.4 Send error in SessSetup = -2
#    [    2.350026] CIFS: VFS: cifs_mount failed w/return code = -2

# Without "aesni-intel", it still works.
# Without "md4", it works and md4 is never used.
# I think "md4" is only needed when -o sec=ntlm AND NOT -o guest NOR -o password=""?
# We MAY need to change "cmac" to "gmac" at some point in the future.

# I unsuccessfully tried to avoid these dependencies via mount options.
#
# Here is me trying to see what modules we ACTUALLY need.
# Doing a "reboot -ff" before each test.
#
#    # No options at all fails due to no password prompt program.
#        (initramfs) dmesg -c >/dev/null && ipconfig enp0s1 && lsmod >before && if mount.cifs //10.0.2.4/qemu /root; then lsmod | diff -U0 before -; else dmesg -c; fi
#        Child process terminated abnormally.
#        [   39.491689] mount.cifs[165]: segfault at 0 ip 00007ffb387d8ad1 sp 00007ffef5394908 error 4 in libc-2.31.so[7ffb3869e000+14b000]
#
#    # These remaining options all have the same output.
#    # The login options that live-boot defaults to...
#        (initramfs) dmesg -c >/dev/null && ipconfig enp0s1 && lsmod >before && if mount.cifs -ouser=root,password= //10.0.2.4/qemu /root; then lsmod | diff -U0 before -; else dmesg -c; fi
#    # No options; use defaults from Debian 11 / Linux 5.10 / Samba 6.11
#        (initramfs) dmesg -c >/dev/null && ipconfig enp0s1 && lsmod >before && if mount.cifs -oro,guest //10.0.2.4/qemu /root; then lsmod | diff -U0 before -; else dmesg -c; fi
#    # Oldest security, newest protocol.
#        (initramfs) dmesg -c >/dev/null && ipconfig enp0s1 && lsmod >before && if mount.cifs -oro,guest,sec=none,vers=3.1.1 //10.0.2.4/qemu /root; then lsmod | diff -U0 before -; else dmesg -c; fi
#    # Oldest security, second-oldest protocol.
#        (initramfs) dmesg -c >/dev/null && ipconfig enp0s1 && lsmod >before && if mount.cifs -oro,guest,sec=none,vers=2.0 //10.0.2.4/qemu /root; then lsmod | diff -U0 before -; else dmesg -c; fi
#        @@ -2 +2,7 @@
#        -cmac                   16384  0
#        +nls_utf8               16384  3
#        +cifs                 1212416  2
#        +libdes                 24576  1 cifs
#        +libarc4                16384  1 cifs
#        +dns_resolver           16384  1 cifs
#        +fscache               393216  1 cifs
#        +cmac                   16384  1
#        @@ -5 +11 @@
#        -aesni_intel           368640  0
#        +aesni_intel           368640  1
#
#    # Try to avoid the AES dependency by using an older SMB version?
#        (initramfs) dmesg -c >/dev/null && ipconfig enp0s1 && lsmod >before && if mount.cifs -oro,guest,sec=none,vers=1.0 //10.0.2.4/qemu /root; then lsmod | diff -U0 before -; else dmesg -c; fi
#        mount error(95): Operation not supported
#        [   94.782804] CIFS: VFS: Use of the less secure dialect vers=1.0 is not recommended unless required for access to very old servers
#        [   94.824267] CIFS: VFS: cifs_mount failed w/return code = -95
