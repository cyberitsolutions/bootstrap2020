# I initially tried doing
#
#     debconf-set-selections <<<EOF
#     nslcd nslcd/ldap-uris DNS:lan
#     nslcd nslcd/ldap-base DOMAIN
#     EOF
#
# This uses DNS SRV to look up _ldap._tcp.lan (good).
# If it gets something like "0 0 636 ldap.lan", it uses ldaps://ldap.lan/ (good).
# However the base converts the URI domain into dc=example,dc=com format, rather than e.g. quering a TXT record (bad!).
# PrisonPC uses a split-horizon base of ou=inmates,o=PrisonPC or ou=staff,o=PrisonPC.
# Since we can't do that via autoconfig, just hard-code the whole thing for now.
#
#     https://sources.debian.org/src/nss-pam-ldapd/0.9.11-1/nslcd/cfg.c/#L423
#     https://sources.debian.org/src/nss-pam-ldapd/0.9.11-1/nslcd/cfg.c/#L670
#     https://sources.debian.org/src/openldap/2.4.59+dfsg-1/libraries/libldap/dnssrv.c/?hl=127#L127

# 18:01 <twb> Bumblefuck
# 18:01 <twb> (bootstrap:ef2c8b5-dirty)root@hera:/# ls -l /etc/nslcd.conf
# 18:01 <twb> -rw-r----- 1 root nslcd 682 2021-10-19 17:47 /etc/nslcd.conf
# 18:01 <twb> (bootstrap:ef2c8b5-dirty)root@hera:/# getent group nslcd
# 18:01 <twb> nslcd:x:110:
# 18:01 <twb> ...it's a dynamic group, so I can't use it with mmdebstrap --customize-hook=tar-in (which forces numeric)
# 18:02 <twb> So I will have to make the file world-readable, or use debconf-set-selections to write the file indirectly (which has different annoyances, like by default it does not validate the server certificate at all)
# 18:06 <twb> INTERESTING
# 18:07 <twb> even when that file is root:root 400, nslcd can read it
# 18:07 <twb> no systemd unit... (so nslcd starts as root then drops privs)

uid nslcd
gid nslcd
uri ldaps://PrisonPC/
# FIXME: use Let's Encrypt.
tls_cacertfile /etc/ssl/certs/com.prisonpc.pem

# This prevents the other accounts from even resolving,
# let alone logging in. --twb, Jun 2014
base ou=Staff,o=PrisonPC

# Prevent p123 discovering that p456 is "Alice Smith".
# https://alloc.cyber.com.au/task/task.php?taskID=25114
# FIXME: instead of this, patch server with something like this:
#           olcAccess: to attrs=commonName,surName,givenName
#                         filter=objectClass=posixAccount
#                      by * none
#        ppcadm retains implicit read/write/manage access due to olcRootDN.
#        Not doing so yet only because ICBF testing that for regressions...
#
# UPDATE: staff SOE never had this.
#         Not sure if this was intentional or necessary.
#         Therefore leaving out of staff SOE for now.
#map passwd gecos uid


# Debian 12 workaround for "new users can't log in".
#
# When user object has "pwdReset: TRUE",
# the user is supposed to see something like this (in xdm or login):
#
#    Username: alice
#    Password: foo
#    New password: bar
#    Confirm new password: bar
#
# With D11 server (slapd 2.4.57) and D11 client (nss-pam-ldapd 0.9.11), this fails.
# With D11 server (slapd 2.4.57) and D12 client (nss-pam-ldapd 0.9.12), this fails.
# With D12 server (slapd 2.5.13) and D11 client (nss-pam-ldapd 0.9.11), this fails.
# With D12 server (slapd 2.5.13) and D12 client (nss-pam-ldapd 0.9.12), this fails.
#
# The failure message looks like this:
#
#     nslcd: <authc="s"> ldap_result() failed: Insufficient access:
#                        Operations are restricted to bind/unbind/abandon/StartTLS/modify password
#     nslcd: <authc="s"> uid=s,ou=Staff,o=PrisonPC: Insufficient access
#     nslcd: <authc="s"> uid=s,ou=Staff,o=PrisonPC: Password must be changed
#
# With slapd 2.4 (Debian 11) this issue was ignored, because
# it only affected user with expired passwords, and
# passwords only expire after 10 years.
# https://alloc.cyber.com.au/task/task.php?taskID=31835
# https://git.cyber.com.au/prisonpc/blob/23.10.1/pre-install.sh#L-299
#
# With slapd 2.5 (Debian 12) this issue is more serious, because
# ldappasswd now implicitly adds pwdReset: TRUE when you reset a user's password.
# This is what ppcadm does internally:
# https://git.cyber.com.au/prisonpc/blob/23.10.1/prisonpc/rfc2307.py#L-382
#
# There is an upstream bug report relating to this:
# https://bugs.debian.org/989409
#
# Our options are:
#
#  1. Set "pwdMustChange: FALSE" so slapd ignores "pwdReset: TRUE".
#     https://git.cyber.com.au/prisonpc/blob/23.10.1/prisonpc/rfc2307.py#L-382
#     https://manpages.debian.org/slapo-ppolicy#pwdMustChange
#
#     I am reluctant to mess with this, because in the past,
#     disabling feature A in ppolicy has silently disabled feature B in ppolicy.
#     For example we make passwords expire after 10 years because if we set them to "never expire",
#     we could not lock accounts at all! (pwdLockoutDuration was ignored).
#     That was a long time ago, though, and maybe things are better now.
#
#  2. Set "pam_authc_search NONE" so nslcd does
#     "auth bind; modify password" instead of
#     "auth bind; search; modify password".
#     https://manpages.debian.org/bookworm/nslcd/nslcd.conf.5.en.html#pam_authc_search
#
#     Note that this ALSO disables the search when doing a normal login (without pwdReset: TRUE).
#     The search is there to make sure you really DID log in properly.
#     Some LDAP servers return "bind worked" even when the password is
#     wrong, so trying to do a search is the only way to know if
#     you've actually logged in.
#
#     I'm a bit nervous about this one, too.
#     I think ultimately this is deciding between:
#
#      a. when LDAP server is OpenLDAP >2.4,
#         accounts with "password must be reset" can't log in.
#
#      b. when LDAP server is fucked up (Fedora DS? Samba? Microsoft AD?),
#         you can log in as anyone, without knowing their password.
#
#     Probably we can trust that PrisonPC desktops will never use such
#     an LDAP server, but it still makes me nervous.
#
#     Note that IN THEORY we should also change nslcd.conf on the
#     PrisonPC main server to match, but that isn't necessary to solve
#     the immediate issue (new users can't log in at all).
#
#  3. Change ppolicy.py to either bypass ldappasswd, or
#     to remove pwdReset: TRUE after ldappasswd adds it.
#     This is "wrong", but it's the wrong behaviour we're used to.
#
#  4. Change slapd to allow nslcd's "sanity check" search query,
#     even when pwdReset: TRUE.
#     I don't think there's an easy way to say this with olcAccess rules.
#     https://manpages.debian.org/bookworm/slapd/slapd.access.5.en.html#OPERATION_REQUIREMENTS
#     https://git.cyber.com.au/prisonpc/blob/23.10.1/pre-install.sh#L-334
#
# I'm trying option #2 here.
pam_authc_search NONE


# Require users to always log in as "alice" never "ALICE" nor "Alice".
# https://alloc.cyber.com.au/task/task.php?taskID=33671
# This regexp is designed to match valid_uid and valid_cn here:
#   https://git.cyber.com.au/prisonpc/blob/22.09.1/prisonpc/rfc2307.py#L-454
#   https://git.cyber.com.au/prisonpc/blob/22.09.1/prisonpc/rfc2307.py#L-477
# Which in turn is probably derived from RFC 952:
#   https://www.rfc-editor.org/rfc/rfc952
#
# NOTE: unlike Python3 re.fullmatch() or HTML5 pattern=, this must be anchored
#       at both ends explicitly with "^" and "$".
#       Without this, you can log in as " s " into xdm.
#       nslcd doesn't escape this to "\20s\20", but
#       even if it did, LDAP would still parse that the same as "s":
#
#           cyber@tweak:~$ ldapsearch -xLLL '(& (objectClass=posixAccount) (cn=\20s\20))' dn
#           dn: uid=s,ou=Staff,o=PrisonPC
#
# The built-in default is (NOTE: trailing "i" means case-folding):
#          /^[a-z0-9._@$()]([a-z0-9._@$() \\~-]*[a-z0-9._@$()~-])?$/i
validnames /^[a-z]([a-z0-9.-]{0,30}[a-z0-9])?$/
