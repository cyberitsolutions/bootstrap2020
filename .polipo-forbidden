# -*- conf -*-
# If it looks like an FQDN, that FQDN is forbidden.  Otherwise, it's
# an unanchored extended regexp, matched against the URL.
#
# See http://adblockplus.org/en/subscriptions huge block lists.
# This little munger makes EREs of its globbing-plus-NIH syntax.
#
# sed -n s/^##//p .polipo-forbidden | sh
#
## {
##   curl -sSL http://easylist.adblockplus.org/easyprivacy.txt
##   curl -sSL http://easylist.adblockplus.org/easylist_noelemhide.txt
## } |
##				   # Ref. http://adblockplus.org/en/filters
## sed 's/^\[/# &/' |	           # leading [ means section (comment)
## sed 's/^!/#/' |		   # leading ! means comment
## sed 's/^@@|*/#WHITELIST /' |	   # leading @@ means whitelist (not handled)
## sed 's/[.?]/\\&/g' |		   # any . or ? is a literal . or ?
## sed 's!\*!.*!g' |		   # any * means anything-at-all
## sed 's!\^![^[:alnum:].%-]!g' |  # any ^ means separator
## sed 's!^||!https?://!' |	   # leading || means any-protocol
## sed 's/|$/$/' |		   # trailing | means end-of-string
## sed 's/^|/^/' |		   # leading | means beginning-of-string
## sed '/^[^#].*\$/ s/^/#OPTIONS /' # any $ means "options" (not handled)
## sed '/^[^#].*|/ s/^/#JUJU /' |  # any other | is bad juju

### UPDATE: I no longer do this.  The resulting file wasn't valid
### according to polipo, and polipo wouldn't report the regex parse
### error, so it was too hard to fix.  Instead, I am using the
### following to blacklist a strict subset.
###
### NOTE: the script below also demonstrates how to sort an list of
### FQDNs right-to-left, i.e. most significant part first.

# hostrev () { local a fqdn new; while IFS=. read -ra fqdn; do new=(); for ((a = ${#fqdn[@]} - 1; a >= 0; a--)); do new+=("${fqdn[a]}"); done; ( IFS=.; printf '%s\n' "${new[*]}" ); done; }
# printf '%s ' 127.254.254.254 blacklisted.invalid $(curl -sSL http://easylist.adblockplus.org/easyprivacy.txt http://easylist.adblockplus.org/easylist_noelemhide.txt | grep '^||[a-z0-9.]*[a-z][a-z0-9.]*\^$' | tr -d '|^' | hostrev | sort | hostrev)
