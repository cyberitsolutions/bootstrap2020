# See also
#   https://salsa.debian.org/kernel-team/linux/-/commits/master/debian/config/config
#   https://salsa.debian.org/kernel-team/linux/-/commits/master/debian/config/amd64/config
#
# FIXME: migrate from xz to zstd, i.e.
#
#           MUST       = kernel_zstd rd_zstd squashfs_zstd  module_compress_zstd
#           SHOULD NOT = kernel_xz   rd_xz   squashfs_xz    module_compress_none

[Basic netboot functionality]
SHOULD = overlay_fs_redirect_dir overlay_fs_index
    # Try to force users to create filenames that are well-formed and normalized UTF-8?
    unicode unicode_normalization_selftest
    # This is a hardening thing.  It might break something.
    werror
    security_safesetid
    dmabuf_move_notify dmabuf_debug
    tmpfs_inode64
    kfence kfence_static_keys kfence_deferrable
    debug_irqflags
    # This is a hardening thing.  It might slow down the system noticably (0% to 5%).
    init_on_alloc_default_on init_on_free_default_on
    # New in 5.4.8 (since 5.3.9).
    # AIUI this means mmap() (i.e. most file reading) needs less overhead (less RAM).
    read_only_thp_for_fs
    # PrisonPC NFS servers are TCP-only.
    nfs_disable_udp_support
    # Bonus: non-root user can't trick in-kernel BPF VM into running something bad.
    # Malus: systemd USER units cannot use things like SyscallFilter=native IPAddressAllow=localhost.
    # But system units (which run as root) still can.
    bpf_unpriv_default_off
    nfs_disable_udp_support
    # FIXME: is this a good thing or a bad thing?
    #        I am pretty sure that inmate desktops are 1- or 2- core only, so
    #        I THINK this will have negligible impact either way.
    #        The old default was 1 decompressor, not 1-per-cpu-core.
    squashfs_compile_decomp_multi_percpu
MUST =
    # When booting in UEFI mode (without CSM),
    # https://git.cyber.com.au/prisonpc/blob/24.05.1/prisonpc/tcb.py
    # works by loading a UKI (kernel+ramdisk+bootargs as an EFI binary).
    # For this to work, the kernel's EFI stub has to be compiled in.
    #
    # This generates a warning:
    #
    #     $ D13_shell --include=linux-image-cloud-amd64,systemd-ukify,systemd-boot,python3-cryptography,sbsigntool,zstd --customize-hook='upload /tmp/linux-image-6.9.7inmate_6.9.7-1721685034_amd64.deb /x.deb' --customize-hook='chroot $1 apt install ./x.deb' --customize-hook='chroot $1 sh -c "ukify build --linux /boot/vmlinuz*inmate* --initrd /boot/initrd.img*inmate*"'
    #
    # This generates an error:
    #
    #     $ D13_shell --include=linux-image-cloud-amd64,systemd-ukify,systemd-boot,python3-cryptography,sbsigntool,zstd --customize-hook='chroot $1 ukify genkey --secureboot-private-key=/tmp/key --secureboot-certificate=/tmp/cert' --customize-hook='upload /tmp/linux-image-6.9.7inmate_6.9.7-1721685034_amd64.deb /x.deb' --customize-hook='chroot $1 apt install ./x.deb' --customize-hook='chroot $1 sh -c "ukify build --secureboot-private-key=/tmp/key --secureboot-certificate=/tmp/cert --linux /boot/vmlinuz*inmate* --initrd /boot/initrd.img*inmate*"'
    efi_stub
    # bootstrap2020 always uses zstd in Debian 12+ (kernel, ramdisk, squashfs).
    kernel_zstd rd_zstd squashfs_zstd
    # Build SOE faster (unpack .deb, then pack .squashfs).  Maybe boot a little slower.
    # FIXME: when module compression is enabled,
    #        boot hangs sometime between pxelinux finishing and X starting.
    #        I am not sure exactly where, because we have terminal support compiled out!
    #        I have confirmed that at least the .ko.zst files make it into /boot/initd.img.
    #        I found this line that is broken for .ko.zst, BUT
    #        I'm 99% sure the nfs driver is =y so will be in /proc/filesystem, so
    #        the broken script line will not trigger (for us).
    #
    #            https://sources.debian.org/src/live-boot/1:20210208/components/9990-misc-helpers.sh/#L494
    #module_compress_zstd
    # FIXME: should smb_fs be enabled (as nfs_fs)?  The server side smb_server is disabled (as nfsd).
    block net packet unix inet nfs_fs nfs_v4 blk_dev_loop squashfs tmpfs overlay_fs
    # SATA AHCI CD/DVD drives
    blk_dev_sr sata_ahci udf_fs iso9660_fs joliet
    # Firewall bits
    nf_tables nf_tables_ipv4 nf_tables_ipv6 nft_ct nft_log
    nf_conntrack
    # session-monitor panic reboot
    watchdog soft_watchdog watchdog_nowayout watchdog_handle_boot_enabled magic_sysrq
    # video
    drm_i915
    # FIXME: as at Linux 6.9, drm_xe is marked "experimental".
    #        Should we enable it before Debian does? --twb, July 2024
    # drm_xe
    # audio
    snd_hda_generic snd_hda_codec_realtek
    # USB Keyboard & Mouse
    hid_support usb_hid hid_generic input_evdev
    # USB 1/2/3 hubs plugged into the PCIe bus, for mouse & keyboard
    usb_ohci_hcd_pci usb_ehci_pci usb_xhci_pci
    # USB 1/2/3 hubs, for mouse & keyboard
    usb_ohci_hcd usb_ehci_hcd usb_xhci_hcd
    # IR remote control (receiver - AIO H76/H81)
    ir_mceusb
    # IR remote control (transmitter - Safety Pack v2)
    ir_nec_decoder
    # IPTV
    ip_multicast ip_mroute
    # For future-proofing, enable some additional IR RC transmitter protocols?
    ir_rc5_decoder ir_rc6_decoder ir_jvc_decoder ir_sony_decoder ir_sanyo_decoder ir_sharp_decoder ir_xmp_decoder
    ir_rcmm_decoder
    # For Chromium 64 (Chromium 57 does not need it).
    # https://alloc.cyber.com.au/task/task.php?taskID=32499
    # Without advise_syscalls, the GUI says "Oh, snap!" and stderr says OOM
    # advise_syscalls might be needed?
    advise_syscalls
    # FIXME: these sound like mildly good things to enable.  Are they? —twb, Feb 2017
    # Debian Linux 4.13+ enables security_yama by default, iff apparmor is off
    security_yama
    security_dmesg_restrict
    # NOTE: security_perf_events_restrict is a Debian-only patch.
    #       https://salsa.debian.org/kernel-team/linux/-/blob/debian/6.9.7-1_bpo12+1/debian/patches/features/all/security-perf-allow-further-restriction-of-perf_event_open.patch
    #       It's there as at 6.9.7.
    #       build-inmate-kernel-detect-obsolete.py mis-detects it as absent because it's looking at
    #       https://github.com/torvalds/linux/tree/v6.9
    #       not
    #       https://salsa.debian.org/kernel-team/linux/-/tree/debian/6.9.7-1_bpo12+1
    security_perf_events_restrict
    randomize_base randomize_memory
    randomize_kstack_offset_default
    fortify_source
    bootparam_hardlockup_panic bootparam_softlockup_panic
    # New in 5.18
    randomize_kstack_offset
    # New in 5.18 - note: might break qemu qxl video driver?
    devtmpfs_safe
    # For intel-microcode
    # NOTE: 6.5 -> 6.6 removed the "config MICROCODE_INTEL",
    #       it is inherently always on in 6.6+.
    #       https://github.com/torvalds/linux/commit/e6bcfdd75d53390a67f67237f4eafc77d9772056
    microcode
    # For SPECTRE / MELTDOWN
    # NOTE: many of these were renamed in 6.7→6.9
    #       e.g. https://github.com/torvalds/linux/commit/7b75782ffd8243288d0661750b2dcc2596d676cb
    CPU_MITIGATIONS
    MITIGATION_RETPOLINE X86_INTEL_TSX_MODE_OFF MITIGATION_SLS
    # This is a hardening thing.  It might slow down the system noticably.
    # It mitigates MELTDOWN-class attacks.
    # https://www.kernel.org/doc/html/latest/x86/pti.html
    mitigation_page_table_isolation
    # If/when desktops (CPU + mainboard) support IOMMU, we should use it.
    # Ref. https://en.wikipedia.org/wiki/DMA_attack#Mitigations
    INTEL_IOMMU
    # This is a hardening thing.  It makes it harder to pwn a crappy alsa snd driver.
    SND_CTL_INPUT_VALIDATION
SHOULD NOT =
    # bootstrap2020 always uses zstd in Debian 12+ (kernel, ramdisk, squashfs).
    kernel_xz
    rd_xz rd_gzip rd_lz4
    squashfs_xz squashfs_lz4
    # Prior to systemd (i.e. Debian 8), we used the "pxe-kexec" package.
    # This downloaded the kernel/ramdisk/cmdline over TFTP at the START of a reboot.
    # Then the end of the reboot did kexec(2) instead of a real reboot.
    # The end result was to save about 10s off a reboot.
    # When we switched to systemd, its reboot handling was weird, so we just skipped it.
    # We have never cared enough to go back and try to "solve" pxe-kexec.
    # So fuck it, compile kexec out.
    # (Removing it is also a minor win for hardening.)
    kexec kexec_file
    # Trying to fix H87 graphics (PCI ID 8086:041e). [#24195]
    # UPDATE: as the Stretch kernel (v4.9) is newer than the H87,
    #         this option is no longer relevant for H87, but
    #         it will become useful again on the *next* hardware refresh.
    # UPDATE: in v4.9 drm_i915_preliminary_hw_support became drm_i915_alpha_support.
    # UPDATE: in v4.2 drm_i915_fbdev merged into drm_fbdev_emulation.
    # UPDATE: INSTEAD of this option, add "i915.alpha_support=1" to pxelinux.cfg if/when needed.
    #drm_i915_alpha_support
    # New in 5.4: Basic module for enforcing kernel lockdown
    # NOTE: this talks about "integrity" and "confidentiality", which
    #       sounds like things we do not strictly want/need...
    # UPDATE:
    # We opt out of this because it depends on parts of the cryptography system, and
    # "no unnecessary crypto" is part of the high-level policy.
    #   security_lockdown_lsm
    #   --depends--> module_sig
    #   --depends--> module_sig_format
    #   --depends--> system_data_verification
    #   --depends--> crypto_rsa
    #   --depends--> crypto_manager
    security_lockdown_lsm security_lockdown_lsm_early lock_down_kernel_force_none
    # "for developers only[…] issues under specific conditions and
    # should not be used in production."
    nfs_v4_2_read_plus
MUST NOT =
    # New in 5.19; it's labelled "DANGEROUS", so explicitly block it.
    MICROCODE_LATE_LOADING

# https://github.com/systemd/systemd/blob/v250/README#L30-L164
[systemd]
MUST =
    devtmpfs cgroups inotify_user signalfd timerfd epoll unix sysfs proc_fs fhandle
    # FIXME: crypto_* here is allegedly for sd128,
    #        which appears to be needed for at least initializing /etc/machine-id.
    #        But I'm 90% sure old Debian 9 SOEs also said this in their systemd, AND
    #        they DEFINITELY have working /etc/machine-id.
    #        I think *for now* I'll leave these off, and
    #        hopefully notice if anything breaks...
    #crypto_user_api_hash crypto_hmac crypto_sha256
    dmiid
    net_ns
    # PrisonPC is currently IPv4-only, i.e. WE definitely don't need/want IPv6.
    # AFAIK systemd doesn't actually *BREAK* if you disable v6 host-wide.
    # UPDATE: prisonpc.git:tca3 still does "ipv6.disable=1" at boot time, but
    #         if we disable CONFIG_IPV6 at compile time,
    #         nftables cannot do dual-stack firewall ("add table inet A").
    #         Dual-stack firewall is good defense-in-depth against the day v6 is turned on.
    ipv6
    user_ns
    tmpfs_xattr tmpfs_posix_acl seccomp seccomp_filter
    kcmp
    # IPAddressDeny=any is a security feature used in e.g. upower.service.
    # We want it.
    bpf bpf_syscall bpf_jit have_ebpf_jit cgroup_bpf
    # RestrictFileSystems= is new in v250; nobody is using it yet.
    #bpf bpf_syscall bpf_lsm debug_info_btf lsm="⋯,bpf"
MUST NOT =
    fw_loader_user_helper
    rt_group_sched
SHOULD NOT =
    # PrisonPC does not care about this.
    # The only drive inmates see is an ATAPI DVD drive, and
    # we do not need to know its serial numbers.
    #     Support for some SCSI devices serial number retrieval, to
    #     create additional symlinks in /dev/disk/ and /dev/tape:
    #     https://github.com/systemd/systemd/commit/a5c724b
    blk_dev_bsg
    # PrisonPC does not use systemd autofs feature.
    # Arguably we SHOULD start doing it for $HOME.
    # https://github.com/cyberitsolutions/bootstrap2020/blob/main/debian-11-PrisonPC/user-home-dir.py#L55-L56
    autofs_fs
    # https://github.com/systemd/systemd/commit/3b920d7
    # says it's for kcmp(2), but the only places kcmp() is ACTUALLY used is
    # https://github.com/systemd/systemd/blob/main/src/basic/fd-util.c#L420-427
    # which says lack of kcmp isn't a big deal.
    # UPDATE: there's a CONFIG_KCMP now, so I'm gonna just SHOULD that.
    #         https://github.com/systemd/systemd/issues/21947
    checkpoint_restore
    # Debian does not even build systemd-oomd!
    # https://github.com/systemd/systemd/blob/v250/README#L150
    psi
    # I'm 90% sure we don't care about CPUWeight=500 CPUQuota=20%
    cgroup_sched fair_group_sched cfs_bandwidth
    # We do not use dm_verity.
    # It is meant to detect Evil Maid attack when rootfs is mutable (ours isn't).
    dm_verity_verify_roothash_sig

# This list was verified by me, experimentally, in Jan 2022.
# I couldn't find any equivalent to systemd's "you need this" list.
[plymouth]
MUST = drm_fbdev_emulation
MUST NOT =
    # FIXME: is framebuffer_console needed?
    framebuffer_console
    drm_simpledrm
    # This is described as "legacy" but also "provides the linux console"
    vga_console
# FIXME: enable this?
#        Currently in "too hard" basket because triggers these non-boolean prompts:
#        Display a user-friendly message when a kernel panic occurs (DRM_PANIC) [Y/n/?] y
#          Drm panic screen foreground color, in RGB (DRM_PANIC_FOREGROUND_COLOR) [0xffffff] (NEW)
#          Drm panic screen background color, in RGB (DRM_PANIC_BACKGROUND_COLOR) [0x000000] (NEW)
# SHOULD =
#     # https://www.phoronix.com/news/Linux-DRM-Panic-BSoD-Picture
#     drm_panic
SHOULD NOT = drm_panic

[make squashfs a little faster]
SHOULD =     squashfs_decomp_multi_percpu squashfs_file_direct
SHOULD NOT = squashfs_decomp_single       squashfs_file_cache

[Stack Protector]
# Stack Protection is off by default in Debian Linux 3.14.
# Stack Protection is regular by default in Debian Linux 4.13.
SHOULD =     stackprotector_strong

# FIXME: change SHOULD NOT to MUST once https://bugs.debian.org/983436 is fixed.
#        UPDATE: that happened in Debian 11 -> 12.
[GCC plugins hardening]
MUST =
    gcc_plugins
    # FIXME: this one isn't working quite right, so leave disabled for now... --twb, March 2024
    # https://github.com/torvalds/linux/blob/v6.6/security/Kconfig.hardening#L63-L110
    # gcc_plugin_structleak_byref_all
    gcc_plugin_randstruct
    randstruct_performance
    gcc_plugin_stackleak
    stackleak_metrics
SHOULD NOT =
    randstruct_none
    randstruct_full
    gcc_plugin_stackleak_verbose
SHOULD =
    list_hardened
    bug_on_data_corruption

## THE REST OF THIS POLICY IS SHOULD NOT / MUST NOT.
[→ General setup]
SHOULD =
    # As at 6.5.3, our choices are between "slab (deprecated)" and "slub", so
    # this is a no-brainer.
    SLUB
MUST NOT =
    # This exposes debugging programs in /sys/bpf/ or something.
    BPF_PRELOAD
SHOULD NOT =
    # NOTE: SECURITY_APPARMOR pulls in AUDIT.
    # NOTE: systemd needs user_ns and net_ns, thus needs namespaces
                     audit                         bsd_process_acct  checkpoint_restore  kprobes
                     numa_balancing  posix_mqueue  profiling         rd_bzip2
                     rd_lzma         rd_lzo        relay             sched_autogroup     swap
    taskstats        uselib          userfaultfd
    slub_debug
    # New in 4.19 → 5.14
    ikheaders uclamp_task
    # These are prompted for because we enable GCC_PLUGINS, and Debian does not.
    gcc_plugin_latent_entropy  gcc_plugin_structleak_verbose
    stackleak_runtime_disable
    init_stack_all_zero gcc_plugin_structleak_user gcc_plugin_structleak_byref
    # We set the default behaviour to "desktop" (PREEMPT_VOLUNTARY=y), and
    # we won't ever need to override that at the boot: prompt (PROMPT_DYNAMIC).
    preempt_dynamic
    # Debian isn't doing this yet.
    # Makes attack surface MUCH smaller.
    # Makes kernel <1% slower and ~1% bigger.
    # IMO this is worth doing.
    zero_call_used_regs
    # Don't know; don't care.
    cachestat_syscall

[→ General setup → Configure standard kernel features (expert users)]
SHOULD NOT = sgetmask_syscall sysfs_syscall kallsyms_all

# FIXME: cgroups allow systemd to INCREASE security.
#        Is there any reason to turn these off???
[→ General setup → Control Group support]
SHOULD NOT = blk_cgroup cgroup_cpuacct cgroup_debug cgroup_device
    cgroup_freezer memcg cgroup_perf cgroup_pids cgroup_sched
    cpusets

[→ Enable loadable module support]
SHOULD NOT = module_force_load module_unload
    # New in 5.4.8 (since 5.3.9).
    # Enabling this allows unusual .ko that might do bad things.
    module_allow_missing_namespace_imports
# NOTE: needed for Secure Boot (verified boot), I think!
# We opt out of this because it depends on parts of the cryptography system, and
# "no unnecessary crypto" is part of the high-level policy.
MUST NOT = MODULE_SIG

# The "naughty modules" detector misdetects "blk_wbt" as bluetooth-related.
# Since we don't care, just remove it rather than making the detector smarter.
[→ Enable the block layer]
MUST NOT =
    # HDD with encryption built into its firmware/controller.
    BLK_SED_OPAL BLK_INLINE_ENCRYPTION
SHOULD NOT = blk_debug_fs  blk_dev_bsglib  blk_dev_integrity blk_wbt
    block_legacy_autoload

[→ Enable the block layer → Partition Types]
SHOULD NOT = partition_advanced

[→ Enable the block layer → IO Schedulers]
SHOULD NOT = iosched_bfq mq_iosched_deadline mq_iosched_kyber

[→ Processor type and features]
MUST NOT = HYPERVISOR_GUEST
SHOULD NOT = amd_mem_encrypt amd_numa crash_dump
    gart_iommu hotplug_cpu hwpoison_inject i8k
    memory_hotplug memtest modify_ldt_syscall net_nsh numa_emu
                   x86_16bit x86_5level x86_amd_platform_device
    x86_cpuid x86_mce_amd x86_mce_inject x86_mpparse x86_msr
    x86_pmem_legacy zbud zpool zsmalloc zswap
    legacy_vsyscall_none
    x86_iopl_ioperm
    perf_events_amd_power
    perf_events_amd_uncore
    perf_events_amd_brs
    strict_sigaltstack_size
SHOULD =
    # This is a hardening thing.  It might break something.
    x86_umip
    # This shows up in 5.16 as an interactive prompt,
    # even though it should already be in Debian's oldconfig.
    # Easier to just keep it =y than to try to debug things.
    sched_cluster
    # New in 5.18
    x86_kernel_ibt

[→ Memory Management options]
SHOULD NOT =
    # only used by virtio (qemu)?
    page_reporting

[→ Power management and ACPI options]
SHOULD NOT = hibernation pm_debug suspend

[→ Power management and ACPI options → ACPI (Advanced Configuration and Power Interface) Support]
SHOULD NOT = acpi_battery acpi_bgrt acpi_container acpi_dock
    acpi_ipmi acpi_nfit acpi_pci_slot
    acpi_rev_override_possible acpi_sbs acpi_spcr_table

[→ Power management and ACPI options → CPU Frequency scaling]
SHOULD NOT = cpu_freq_gov_conservative cpu_freq_gov_powersave
    cpu_freq_gov_schedutil cpu_freq_gov_userspace cpu_freq_stat
    x86_acpi_cpufreq_cpb x86_amd_freq_sensitivity x86_p4_clockmod
    x86_pcc_cpufreq x86_powernow_k8 x86_speedstep_centrino
    x86_amd_pstate
    x86_amd_pstate_ut

# The "naughty modules" detector misdetects "pci_mconfig" as eMMC-related.
# Since we don't care, just remove it rather than making the detector smarter.
[→ Bus options (PCI etc.)]
MUST NOT = PCCARD PCI_STUB ISA
    # New in 5.2.9 (since 4.19.208), drives hardware made from 1988 to 1995.
    # (I'm guessing this *was* called "ISA" and just got renamed.)
    EISA
SHOULD NOT = hotplug_pci pci_iov pcie_dpc pcie_ptm
    pcieaer_inject vmd pcie_dw_plat_host pci_mmconfig
    # New in 5.2.9 (since 4.19.208)
    # Amlogic SoCs's PCI controller chip.  We don't use Amlogic.
    PCI_MESON

[→ Executable file formats / Emulations]
SHOULD NOT = coredump ia32_emulation binfmt_misc x86_x32_abi

[→ Networking support]
MUST NOT = BT HAMRADIO NFC RFKILL WIRELESS CAN NET_IFE LWTUNNEL NET_DEVLINK
    XDP_SOCKETS_DIAG
SHOULD NOT = af_rxrpc ceph_lib net_9p psample failover
    # This is "like af_packet, but faster".
    # It appears to be a "in the cloud" thing.
    # The only things I can see ACTIVELY using it are knot (DNS server/client/utilities) and gradm2.
    # We use neither.
    # https://builders.intel.com/docs/networkbuilders/af-xdp-sockets-high-performance-networking-for-cloud-native-networking-technology-guide.pdf#page=6
    xdp_sockets
    mctp
    # I don't think we use/need/want KCM address family.
    # 
    # https://lwn.net/Articles/657999/
    af_kcm

[→ Networking support → Networking options]
MUST NOT = VSOCKETS 6LOWPAN NET_SWITCHDEV
    TLS
SHOULD NOT = atalk atm batman_adv         bridge dcb
    dns_resolver ieee802154 inet_ah inet_diag inet_esp inet_ipcomp
    inet_tcp_diag inet_udp_diag
    ip_advanced_router
    ip_dccp ip_sctp l2tp lapb llc2 mpls net_fou net_ipgre_demux
    net_ipip net_key net_l3_master_dev net_mpls_gso net_sched
    netlink_diag network_secmark openvswitch packet_diag phonet rds
    tcp_cong_advanced tcp_md5sig tipc unix_diag vlan_8021q x25
    xfrm_user
    qrtr
    bpf_stream_parser
    hsr
    # UPDATE: because cgroups are on due to systemd.
    cgroup_net_prio cgroup_net_classid
    # We don't use IPSec in PrisonPC at this time.
    net_ipvti security_network_xfrm
    # https://en.wikipedia.org/wiki/Multipath_TCP
    # MPTCP use case is "connect to ALL open wifi hotspots at once so I can download porn faster".
    # We do not need this.
    mptcp
    # This garbage is all caused by turning on IPv6 so I can say "inet" in nftables.
    xfrm_interface net_fou netlabel

# This garbage is all caused by turning on IPv6 so I can say "inet" in nftables.
[→ Networking support → Networking options → The IPv6 protocol]
MUST NOT = inet6_ah inet6_esp inet6_ipcomp ipv6_mip6 ipv6_ila ipv6_vti ipv6_sit ipv6_tunnel ipv6_seg6_lwtunnel ipv6_seg6_hmac
    ipv6_ioam6_lwtunnel
SHOULD NOT =
    ipv6_router_pref ipv6_optimistic_dad ipv6_subtrees ipv6_multiple_tables
    # NOTE: this will be needed later when we do IPTV over IPv6.
    ipv6_mroute

[→ Networking support → Networking options → Network packet filtering framework (Netfilter)]
SHOULD NOT = ip_set ip_vs nf_conntrack_bridge

[→ Networking support → Networking options → Network packet filtering framework (Netfilter) → Core Netfilter Configuration ⇒ nft]
# Useful for debugging
SHOULD = nft_reject
    # FIXME: does "nft add rule A B log" need NETFILTER_NETLINK_LOG and/or NF_LOG_SYSLOG, or neither?
    # I'm 90% sure it needs AT LEAST ONE of those two.
    nf_log_syslog
SHOULD NOT =
                            nft_numgen              nft_connlimit
    nft_limit               nft_masq                nft_redir
    nft_nat                 nft_tunnel              nft_queue
    nft_quota               nft_compat              nft_hash
    nft_socket              nft_osf                 nft_tproxy
    nft_synproxy
    nf_dup_netdev           nft_dup_netdev          nft_fwd_netdev
    # "This is helpful for debugging."
    netfilter_netlink_hook
# v6.9 https://github.com/torvalds/linux/commit/a9525c7f6219cee9284c0031c5930e8d41384677
MUST NOT = ip_nf_iptables_legacy ip6_nf_iptables_legacy
[→ Networking support → Networking options → Network packet filtering framework (Netfilter) → Core Netfilter Configuration ⇒ iptables]
# Disable legacy iptables/ip6tables/arptables/ebtables entirely.
# Avoids having to blacklist individual xtables sub-bits explicitly.
MUST NOT = netfilter_xtables ip_nf_iptables ip_nf_arptables
[→ Networking support → Networking options → Network packet filtering framework (Netfilter) → Core Netfilter Configuration ⇒ common to nft AND iptables]
# This pulls in crypto_crc32c which means crypto is needed.
# Fortunately we don't use SCTP anywhere anyway.
MUST NOT = nf_ct_proto_sctp
SHOULD NOT =
    netfilter_ingress
    netfilter_egress
    netfilter_netlink_acct          netfilter_netlink_queue
    netfilter_netlink_log           netfilter_netlink_osf
    nf_conntrack_mark               nf_conntrack_zones
    nf_conntrack_events             nf_conntrack_timestamp
    nf_conntrack_procfs             nf_conntrack_timeout
    nf_conntrack_labels
    nf_ct_proto_dccp                nf_ct_proto_udplite
    nf_conntrack_amanda             nf_conntrack_ftp
    nf_conntrack_h323               nf_conntrack_irc
    nf_conntrack_netbios_ns         nf_conntrack_snmp
    nf_conntrack_pptp               nf_conntrack_sane
    nf_conntrack_sip                nf_conntrack_tftp
    nf_ct_netlink                   nf_ct_netlink_timeout
    nf_nat

[→ Networking support → Networking options → Network packet filtering framework (Netfilter) → IP: Netfilter Configuration]
SHOULD NOT =
    nf_socket_ipv4          nf_tproxy_ipv4          nft_dup_ipv4
    nft_fib_ipv4            nf_tables_arp           nf_dup_ipv4
    nf_log_arp

# This garbage is all caused by turning on IPv6 so I can say "inet" in nftables.
[→ Networking support → Networking options → Network packet filtering framework (Netfilter) → IPv6: Netfilter Configuration]
MUST NOT = ip6_nf_iptables
SHOULD = nf_reject_ipv6 ip6_nf_filter ip6_nf_target_reject
SHOULD NOT =
    nf_socket_ipv6 nf_tproxy_ipv6 nft_dup_ipv6 nft_fib_ipv6 nf_dup_ipv6
    ip6_nf_mangle		    ip6_nf_match_ah
    ip6_nf_match_eui64		    ip6_nf_match_frag
    ip6_nf_match_hl		    ip6_nf_match_ipv6header
    ip6_nf_match_mh		    ip6_nf_match_opts
    ip6_nf_match_rt		    ip6_nf_match_srh
    ip6_nf_nat			    ip6_nf_raw
    ip6_nf_security		    ip6_nf_target_synproxy


[→ Networking support → Networking options → Networking testing]
SHOULD NOT = net_pktgen

# NOTE: we used to block GPIOLIB entirely (because "it might be eMMC"), but
#       it is now needed for (potentially) important Intel PCH components.
#       (PINCTRL_CHERRYVIEW, PINCTRL_INTEL, MFD_INTEL_LPSS_ACPI, …) —twb, Jan 2018
[→ Device Drivers]
# I don't know if the Intel MFDs are *really* needed!
SHOULD =
    # "Intel Low Power Subsystem starting from Sunrisepoint (Skylake PCH)"
    mfd_intel_lpss_acpi mfd_intel_lpss_pci
    # Broxton is 2016-era Atom
    mfd_intel_pmc_bxt
MUST NOT =
    ANDROID_BINDER_IPC
                BCMA       FIREWIRE   FIREWIRE_NOSY       FPGA    FSI           HSI           IIO
    INFINIBAND  IPACK_BUS  LIBNVDIMM  MCB            MD   MEMORY  MEMSTICK      MMC      MTD  NTB
    PARPORT     PWM        SPI        SSB            STM          VIRT_DRIVERS  VME_BUS  W1
    MELLANOX_PLATFORM VIRTIO_MENU
    # GPS receiver
    GNSS
    # This is a virtio (qemu) thing
    VDPA VHOST_MENU
    # "MHI" = "modem<->host interface",
    # I guess this means smartphone modems?
    # But maybe it means VDSL modems?
    # Either way, definitely DO NOT WANT.
    MHI_BUS
    MHI_BUS_EP
SHOULD NOT =
    accessibility         chrome_platforms  connector          dax         extcon
    fusion                goldfish          gpiolib            hwspinlock  i2c
    intel_th              leds_class        macintosh_drivers  new_leds    nvmem
    powercap              pps               ptp_1588_clock     remoteproc  reset_controller
    rpmsg_qcom_glink_rpm  target_core                          uio         vfio
    regulator
    soundwire slimbus
    # NOTE: ir_mceusb (TV remote control) needs this
    #       FIXME: is this still true???
    #              The actual Kconfig dependencies do not reflect this...
    media_support
    # NOTE: igb (Intel ethernet) keeps this installed
    i2c
    ixp4xx_qmgr ixp4xx_npe interconnect
    # https://lwn.net/Articles/717125/
    # This is mostly a standard API that different ARM CPUs will use.
    # We give zero shits until/unless "PrisonPC with Secure Boot" is funded.
    tee
    # "Dollar Cove PMIC on some Intel Cherry Trail systems"
    # This is for 2013-era tablets, not desktops.
    # https://en.wikipedia.org/wiki/Silvermont#Tablet_processors_(Cherry_Trail)
    intel_soc_pmic_chtdc_ti
    # "Merrifield" is for 2013-era smartphones, not desktops
    # https://en.wikipedia.org/wiki/Silvermont#Smartphone_processors_(Merrifield)
    intel_soc_pmic_mrfld
    # If you are building a Baseboard Management Controller (BMC) kernel for Intel platform say Y
    peci
    # This is a thing for Nvidia Tegra (ARM) SoCs.
    # https://www.phoronix.com/news/Linux-5.19-HTE
    hte
    pinctrl_cy8c95x0
    wpcm450_soc

# "PCH" is the "southbridge" on Intel mainboards.
# Without a PCH driver, we cannot reach the NIC, DVD, HD Audio, &c.
# As at Linux 5.8, most are small "pinctrl" drivers.
# A handful of pinctrl drivers have additional dependencies:
#     https://github.com/torvalds/linux/blob/master/drivers/pinctrl/intel/Kconfig
#     Messy depencies: lynxpoint merrifield
#
# We definitely DO NOT need merrifield as it was a 2013-era chipset intended for SMARTPHONES.
# https://en.wikipedia.org/wiki/Silvermont
#
# We MAY need lynx point as it is used in H97 and Z97 mainboards (2014-era).
# FIXME: remove pinctrl_lynxpoint after 2025?
#
# The rest of the pinctrl options are small and have no dependencies, so not worth debating.
[→ Device Drivers ⇒ Intel PINCTRL stuff]
SHOULD NOT = pinctrl_merrifield
SHOULD =
    pinctrl_alderlake		    pinctrl_baytrail
    pinctrl_broxton		    pinctrl_cannonlake
    pinctrl_cedarfork		    pinctrl_cherryview
    pinctrl_denverton		    pinctrl_elkhartlake
    pinctrl_emmitsburg		    pinctrl_geminilake
    pinctrl_icelake		    pinctrl_intel
    pinctrl_jasperlake		    pinctrl_lakefield
    pinctrl_lewisburg		    pinctrl_lynxpoint
    pinctrl_sunrisepoint	    pinctrl_tigerlake

[→ Device Drivers → PCI support]
SHOULD NOT =
    cxl_bus

[→ Device Drivers → Generic Driver Options]
SHOULD NOT =
    allow_dev_coredump  debug_test_driver_remove  fw_loader_user_helper  uevent_helper
    # NOTE: r8169 ethernet driver keeps this installed
    fw_loader
    # We MUST disable this, because it pulls in CRYPTO_SHA256, and
    # we currently have not accepted the "risk" of that hash function. >_>
    fw_loader_debug

    # 14:17 <twb> Do Debian-provided firmware blobs (e.g. firmware-linux-nonfree) require CONFIG_FW_LOADER_COMPRESS ?
    # 14:18 <twb> I tried just running "file /lib/firmware/*/*" but it didn't say anything like "yep this is an xz"
    # 03:26 <bwh> twb: We don't currently compress firmware blobs in the firmware-* packages built from firmware-{free,nonfree}
    fw_loader_compress
    fw_loader_compress_xz

[→ Device Drivers → Misc devices]
MUST NOT = VMWARE_VMCI
    # SD card readers
    MISC_RTSX_PCI MISC_RTSX_USB MISC_ALCOR_PCI
SHOULD NOT =
    ad525x_dpot     altera_stapl        apds9802als         c2port           cb710_core
    ds1682          dummy_irq           enclosure_services  hmc6352          hp_ilo
    ibm_asm         ics932s401                                               isl29003
    isl29020        pch_phub            phantom                              sensors_apds990x
    sensors_bh1770                      sensors_lis3_i2c    sensors_tsl2550
    tifm_core
    sensors_npcm7xx
    drm_accel_habanalabs
    sensors_as370
    uacce
    dw_xdata_pcie bcm_vk
    # FIXME: all our hardware *has* Intel Management Engine (hardware backdoors).
    #        AFAIK we do not need to *interact* with that hardware, though (/dev/mei).
    #        So it should be fine to omit the driver, right?
    intel_mei intel_mei_me intel_mei_txe intel_mei_hdcp
    # I'm 80% sure that PXP is only needed for when you want to watch
    # movies controlled by the Disney Mafia, and PXP is used to
    # prevent you from making "unauthorized" copies.
    intel_mei_pxp
    intel_mei_gsc_proxy
    gp_pci1xxxx
    keba_cp500


[→ Device Drivers → Misc devices → EEPROM support]
SHOULD NOT = eeprom_at24 eeprom_max6875 eeprom_93cx6
    eeprom_ee1004

[→ Device Drivers → Block devices]
MUST NOT = VIRTIO_BLK
SHOULD NOT =
    ata_over_eth                                     blk_dev_drbd              blk_dev_fd
    blk_dev_nbd    blk_dev_null_blk  blk_dev_nvme    blk_dev_pciessd_mtip32xx  blk_dev_ram
    blk_dev_rbd
    cdrom_pktcdvd  zram
    nvme_fc
    nvme_tcp
    blk_dev_ublk

[→ Device Drivers → SCSI device support]
MUST NOT = BLK_DEV_SD SCSI_VIRTIO  VMWARE_PVSCSI
    # "Universal Flash Storage Controller" -- added around 5.19 I think?
    SCSI_UFSHCD
SHOULD NOT =
                                       chr_dev_sch     chr_dev_sg          chr_dev_st
    raid_attrs         scsi_constants  scsi_dh         scsi_fc_attrs       scsi_iscsi_attrs
    scsi_logging       scsi_lowlevel                     scsi_sas_attrs
    scsi_sas_libsas    scsi_spi_attrs  scsi_srp_attrs

[→ Device Drivers → Serial ATA and Parallel ATA drivers]
SHOULD NOT = ata_sff  sata_acard_ahci  sata_pmp  sata_sil  sata_sil24
    pata_legacy
    ahci_dwc

[→ Device Drivers → Network device support]
MUST NOT = WLAN VIRTIO_NET USB_NET_DRIVERS WWAN
SHOULD NOT =
    arcnet  atm_drivers         bonding   dummy       equalizer  fddi         fujitsu_es
    hippi   ieee802154_drivers  ifb       isdn        macvlan    mdio_device  net_core
    net_fc  net_sb1000          net_team  netconsole  nlmon      phylib       plip
    ppp     slip                tun       veth        vmxnet3    vxlan        wan
    net_failover
    mdio_bcm_unimac
    mdio_mvusb
    pcs_xpcs
    pse_controller

# Ideally we support 100M/1G NICs but not 10M or 10G.
# The kernel wants me to turn off NICs by vendor, so I do.
# Leaving in Intel, Realtek, Atheros.
[→ Device Drivers → Network device support → Ethernet driver support]
SHOULD =
    # https://www.realtek.com/en/products/communications-network-ics/category/pci-express
    # RTL8169 is a PCI (not PCIe) chip.
    # RTL8168/8117/8118 are PCIe chips.
    # The "r8169" driver does both.
    # It is the most common chip found on desktop mainboards.
    r8169
    # 2009-era Intel(R) 82575/82576 PCI-Express Gigabit Ethernet support
    igb
    # 2013-era? gigabit ethernet
    e1000
    # 2018-era? gigabit ethernet
    e1000e
SHOULD NOT =
    e100                   fealnx
    ixgbe                  ixgbevf             jme
                           net_vendor_3com     net_vendor_adaptec   net_vendor_agere
    net_vendor_alacritech  net_vendor_alteon   net_vendor_amazon    net_vendor_amd
    net_vendor_aquantia                        net_vendor_broadcom  net_vendor_brocade
    net_vendor_cavium      net_vendor_chelsio  net_vendor_cisco     net_vendor_dec
    net_vendor_dlink       net_vendor_emulex                        net_vendor_ezchip
                           net_vendor_huawei   net_vendor_marvell   net_vendor_mellanox
    net_vendor_micrel      net_vendor_myri     net_vendor_natsemi   net_vendor_netronome
    net_vendor_nvidia      net_vendor_oki      net_vendor_qlogic    net_vendor_qualcomm
    net_vendor_rdc         net_vendor_renesas  net_vendor_rocker    net_vendor_samsung
    net_vendor_silan       net_vendor_sis      net_vendor_smsc      net_vendor_solarflare
    net_vendor_stmicro     net_vendor_sun      net_vendor_synopsys  net_vendor_tehuti
    net_vendor_ti          net_vendor_via      net_vendor_wiznet    sfc
    net_vendor_cortina net_vendor_socionext
    net_vendor_meta
    net_vendor_ni
    net_vendor_microsemi
    net_vendor_cadence net_vendor_neterion net_vendor_packet_engines
    net_vendor_xilinx
    net_vendor_google
    net_vendor_pensando
    net_vendor_microchip
    net_vendor_microsoft
    net_vendor_litex
    net_vendor_asix
    net_vendor_davicom
    net_vendor_engleder
    net_vendor_fungible
    net_vendor_vertexcom
    net_vendor_wangxun
    net_vendor_adi
    ngbe
    # "next-gen" intel ethernet chipset, new in Linux 4.17
    ice
    # 2.5Gbit/s ethernet chip.  Unlikely to be in a desktop?
    igc
    # 10Gbit/s server card
    i40e i40evf
    # Some kind of HPC ASIC networking?  New in 6.7 / 2024.
    # https://download.intel.com/newsroom/2022/corporate/vision/Intel-IPU-Roadmap-Fact-Sheet.pdf
    idpf
    # Obsolete 100Mbit/s realtek chip (older than PCIe)
    8139cp 8139too
    # Obsolete 100Mbit/s atheros chip (older than PCIe)
    atl2
    # Qualcomm/Atheros/Attansic gigabit ethernet chips.
    # I don't know much about this.
    # They were really only ever whitelisted because I had a CHROMEBOOK with an atl ethernet chip.
    # FIXME: remove these altogether?
    atl1 atl1e atl1c alx net_vendor_atheros
    # realtek "automotive switch" 5Gbit/s, so I'm guessing this is for private motorcars?
    rtase

# FIXME: if we continue to opt-out of net_vendor_atheros, this entire section can be skipped.
[→ Device Drivers → Network device support → PHY Device support and infrastructure]
SHOULD NOT =
    amd_phy     aquantia_phy  at803x_phy   bcm87xx_phy    bcm_net_phylib  broadcom_phy
    cicada_phy  davicom_phy   dp83848_phy  dp83867_phy    icplus_phy      lsi_et1011c_phy
    lxt_phy     marvell_phy   micrel_phy   microchip_phy  microsemi_phy   national_phy
    qsemi_phy   realtek_phy   smsc_phy     ste10xp        teranetics_phy  vitesse_phy
    ax88796b_phy
    nxp_tja11xx_phy
    adin_phy
    adin1100_phy
    dp83869_phy
    dp83td510_phy
    bcm84881_phy
    bcm54140_phy
    cortina_phy
    marvell_10g_phy
    microchip_t1_phy
    renesas_phy
    rockchip_phy
    dp83822_phy
    dp83tc811_phy
    led_trigger_phy
    marvell_88x2222_phy mediatek_ge_phy motorcomm_phy nxp_c45_tja11xx_phy
    maxlinear_gphy
    nxp_cbtx_phy
    microchip_t1s_phy
    ncn26000_phy
    marvell_88q2xxx_phy
    qca83xx_phy qca808x_phy
    air_en8811h_phy
    # This is a 1Gbit ethernet, *but* it's a kind intended for use inside motorcars, not desktops.
    # Disable it until/unless we see it in the wild (very unlikely). --twb, July 2024
    dp83tg720_phy

[→ Device Drivers → Input device support]
SHOULD NOT =
    input_ff_memless    input_joydev  input_joystick     input_keyboard  input_leds
    input_matrixkmap    input_misc    input_mouse        input_mousedev
    input_sparsekmap    input_tablet  input_touchscreen  keyboard_gpio   rmi4_core

[→ Device Drivers → Input device support → Hardware I/O ports]
SHOULD NOT =
    gameport      serio      serio_altera_ps2  serio_ct82c710  serio_i8042  serio_libps2
    serio_pcips2  serio_raw  serio_serport

[→ Device Drivers → Character devices]
MUST NOT = NOZOMI HW_RANDOM_VIRTIO VIRTIO_CONSOLE LDISC_AUTOLOAD
    LEGACY_TIOCSTI
    # plymouth needs all of these: UNIX98_PTYS VT TTY
SHOULD NOT =
    applicom                   devport        hw_random_amd  hw_random_tpm  hw_random_via
    ipmi_handler               moxa_intellio  moxa_smartio   mwave          n_gsm
    n_hdlc        nvram                                                     serial_nonstandard
    synclink_gt  tcg_tpm        telclock       tty_printk
    hw_random_ba431
    hw_random_xiphera
    xillyusb
    # FIXME: do we need this?
    serial_dev_bus

[→ Device Drivers → Character devices → Serial drivers]
SHOULD NOT = serial_8250  serial_jsm  serial_pch_uart  serial_rp2
    serial_fsl_linflexuart
    serial_sprd
    serial_bcm63xx
    # NOTE: we might need to re-enable this later if we end up supporting desktops that are really intel laptops under the hood.
    # "Support for UART on Lantiq and Intel SoCs."
    serial_lantiq

[→ Device Drivers → I2C support]
MUST NOT = i2c_virtio
SHOULD NOT = i2c_chardev i2c_mux i2c_stub i2c_compat acpi_i2c_opregion
    # i2c_algoit is pulled in by intel GPU and intel NIC; we don't actually care.
    i2c_algobit

[→ Device Drivers → I2C support → I2C Hardware Bus support]
SHOULD NOT =
    i2c_ali1535         i2c_ali1563              i2c_ali15x3     i2c_amd756          i2c_amd8111
    i2c_designware_pci  i2c_designware_platform  i2c_diolan_u2c  i2c_eg20t           i2c_i801
    i2c_isch            i2c_ismt                 i2c_kempld      i2c_nforce2         i2c_ocores
                        i2c_pca_platform         i2c_piix4       i2c_robotfuzz_osif  i2c_scmi
    i2c_simtec          i2c_sis5595              i2c_sis630      i2c_sis96x          i2c_taos_evm
    i2c_tiny_usb        i2c_via                  i2c_viapro      i2c_viperboard
    i2c_amd_mp2 i2c_nvidia_gpu
    i2c_cp2615
    i2c_pci1xxxx
    i2c_zhaoxin

[→ Device Drivers → PPS support]
SHOULD NOT = pps_client_ldisc

[→ Device Drivers → Power supply class support]
MUST NOT =
    # Only used by emulators.
    BATTERY_GOLDFISH
SHOULD NOT =
    power_supply
    # NOTE: ACPI_AC (case power button support) pulls in POWER_SUPPLY,
    #       so we have to blacklist all the individual battery chips.
    battery_sbs battery_bq27xxx charger_adp5061 charger_axp20x
    battery_rt5033 charger_lt3651
    battery_max17042
    battery_max1720x
    charger_bd99954
    battery_cw2015
    charger_bq2515x
    charger_bq25980
    charger_ltc4162l charger_bq256xx
    ip5xxx_power
    battery_samsung_sdi
    charger_max77976
    battery_ug3105
    fuel_gauge_mm8013

[→ Device Drivers → GPIO Support]
SHOULD NOT = gpio_amdpt gpio_bt8xx gpio_sysfs gpio_winbond gpio_ws16c48
    gpio_amd_fch gpio_xilinx
    gpio_aggregator
    gpio_latch
    gpio_pca9570
    gpio_cdev
    # FIXME: spotted these were turned on; I think they are not needed.
    gpio_pci_idio_16 gpio_pcie_idio_24
    # "For Atom E6xx in-vehicle infotainment".  Not us.
    gpio_ml_ioh
    gpio_sim
    gpio_f7188x
    gpio_fxl6408
    gpio_ds4520
# FIXME: this one is an Intel thing -- do we need it?
#   gpio_elkhartlake
    gpio_virtuser


[→ Device Drivers → Hardware Monitoring support]
# FIXME: do we really need HWMON at all?
#        My vague thinking is that it lets the kernel log when the case is about to overheat...
#        Currently selected sub-options are only
#          sensors_i5500   Intel 5500/5520/X58 temperature sensor
#          sensors_coretemp Intel Core/Core2/Atom temperature sensor
#          https://www.kernel.org/doc/html/latest/hwmon/coretemp.html
#        I'll add that as a SHOULD for now just as documentation...
SHOULD = sensors_coretemp sensors_i5500
SHOULD NOT =
    sensors_abituguru       sensors_abituguru3       sensors_acpi_power      sensors_ad7414
    sensors_ad7418          sensors_adm1021          sensors_adm1025         sensors_adm1026
    sensors_adm1029         sensors_adm1031          sensors_adm9240
    sensors_ads7828         sensors_adt7411          sensors_adt7462         sensors_adt7470
    sensors_adt7475         sensors_amc6821          sensors_applesmc        sensors_asb100
    sensors_asc7621         sensors_atk0110          sensors_atxp1           sensors_dell_smm
    sensors_dme1737         sensors_ds1621           sensors_ds620           sensors_emc1403
    sensors_emc2103         sensors_emc6w201         sensors_f71805f         sensors_f71882fg
    sensors_f75375s         sensors_fam15h_power     sensors_fschmd          sensors_ftsteutates
    sensors_g760a           sensors_gl518sm          sensors_gl520sm         sensors_i5k_amb
    sensors_it87            sensors_jc42             sensors_k10temp         sensors_k8temp
    sensors_lineage         sensors_lm63             sensors_lm73            sensors_lm75
    sensors_lm77            sensors_lm78             sensors_lm80            sensors_lm83
    sensors_lm85            sensors_lm87             sensors_lm90            sensors_lm92
    sensors_lm93            sensors_lm95241          sensors_lm95245         sensors_ltc4151
    sensors_ltc4215         sensors_ltc4245          sensors_ltc4261         sensors_max16065
    sensors_max1619         sensors_max1668          sensors_max6639         sensors_max6642
    sensors_max6650         sensors_menf21bmc_hwmon  sensors_nct6683         sensors_nct6775
    sensors_ntc_thermistor  sensors_pc87360          sensors_pc87427         sensors_pcf8591
    sensors_sch5627         sensors_sch5636          sensors_sch56xx_common  sensors_sht21
    sensors_sis5595                                  sensors_smsc47b397      sensors_smsc47m1
    sensors_smsc47m192      sensors_thmc50           sensors_tmp102          sensors_tmp401
    sensors_tmp421          sensors_via686a          sensors_via_cputemp     sensors_vt1211
    sensors_vt8231          sensors_w83627ehf        sensors_w83627hf        sensors_w83781d
    sensors_w83791d         sensors_w83792d          sensors_w83793          sensors_w83795
    sensors_w83l785ts       sensors_w83l786ng
    sensors_aspeed sensors_nct7802 sensors_nct7904 sensors_w83773g
    sensors_ltc2947_i2c sensors_tmp513
    sensors_adm1177 sensors_drivetemp sensors_max31730
    sensors_axi_fan_control
    sensors_corsair_cpro
    sensors_mr75203
    sensors_aht10 sensors_corsair_psu sensors_ltc2992 sensors_max127 sensors_tps23861 sensors_nzxt_kraken2 sensors_sbtsi sensors_sht4x
    sensors_aquacomputer_d5next sensors_sbrmi
    sensors_max6620
    sensors_nzxt_smart2
    sensors_sy7636a
    sensors_ina238
    sensors_tmp464
    sensors_asus_wmi
    sensors_asus_ec
    sensors_nct6775_i2c
    sensors_max31760
    max31827
    sensors_emc2305
    sensors_sht3x
    sensors_sht4x
    sensors_mc34vr500
    sensors_occ_p8_i2c
    sensors_oxp
    sensors_hp_wmi
    sensors_hs3001
    sensors_ltc2991
    sensors_powerz
    sensors_lenovo_ec
    sensors_asus_rog_ryujin sensors_chipcap2 sensors_gigabyte_waterforce sensors_ltc4282 sensors_nzxt_kraken3 sensors_pt5161l
    sensors_spd5118

[→ Device Drivers → Power Sequencing]
MUST NOT =
    power_sequencing_qcom_wcn   # this is a wifi/bluetooth thing

[→ Device Drivers → Thermal drivers]
SHOULD NOT =
    thermal_hwmon thermal_gov_fair_share thermal_gov_bang_bang thermal_gov_power_allocator
    # "Newer laptops and tablets"
    int340x_thermal int3406_thermal
    # Can INTEL_SOC_DTS_THERMAL can occur in hardware we care about (desktops)?
    # https://github.com/torvalds/linux/commit/bc40b5e320dfe4a691a6cf09ac5c8005d561eebd
    # It seems to pull in minimal dependencies, so I uess we don't really care.

[→ Device Drivers → Watchdog Timer Support]
MUST NOT = USBPCWATCHDOG
MUST =
    # This is the Intel hardware watchdog.
    # It is found in AMC desktops.
    # In Debian 9 we used to disable this and rely only on the in-kernel watchdog ("softdog").
    # This was to simplify setup on our end.
    # HOWEVER, in Debian 11 this layer is managed by systemd, so we do not need to worry anymore.
    # NOTE: selects lpc_ich i2c_i801
    iTCO_wdt
SHOULD NOT =
    60xx_wdt            acquire_wdt              advantech_wdt        alim1535_wdt
    alim7101_wdt        cadence_watchdog         cpu5_wdt             eurotech_wdt
    f71808e_wdt         hp_watchdog              i6300esb_wdt         ib700_wdt
    ibmasr              ie6xx_wdt                intel_mei_wdt        it8712f_wdt
    it87_wdt                                     machz_wdt            max63xx_watchdog
    menf21bmc_watchdog  ni903x_wdt               nic7018_wdt          nv_tco
    pc87413_wdt         pcipcwatchdog            sbc_epx_c3_watchdog  sbc_fitpc2_watchdog
    sc1200_wdt          smsc37b787_wdt           smsc_sch311x_wdt     sp5100_tco
    via_wdt             w83627hf_wdt             w83877f_wdt          w83977f_wdt
    wafer_wdt           watchdog_pretimeout_gov  watchdog_sysfs       wdat_wdt
    wdtpci              ziirave_watchdog
    ebc_c384_wdt
    tqmx86_wdt
    exar_wdt
    advantech_ec_wdt
    lenovo_se10_wdt

[→ Device Drivers → Multifunction device drivers]
SHOULD NOT =
                    intel_soc_pmic    intel_soc_pmic_bxtwc  intel_soc_pmic_chtwc
    lpc_ich         lpc_sch           mfd_88pm800           mfd_88pm805
    mfd_88pm860x    mfd_aat2870_core  mfd_as3711            mfd_axp20x_i2c
    mfd_bd9571mwv   mfd_da9052_i2c    mfd_da9055            mfd_da9062
    mfd_da9063      mfd_da9150        mfd_dln2              mfd_intel_quark_i2c_gpio
    mfd_kempld      mfd_lp8788        mfd_max14577          mfd_max77693
    mfd_max77843    mfd_max8907       mfd_max8925           mfd_max8997
    mfd_max8998     mfd_menf21bmc     mfd_mt6397            mfd_palmas
    mfd_rc5t583     mfd_rt5033                              mfd_sec_core
    mfd_sky81452                      mfd_ti_lmu            mfd_ti_lp873x
    mfd_timberdale  mfd_tps65086      mfd_tps65090          mfd_tps6586x
    mfd_tps65910    mfd_tps65912      mfd_tps65912_i2c
                    mfd_viperboard    mfd_wm831x_i2c        mfd_wm8350_i2c
    mfd_wm8400      mfd_wm8994        pmic_adp5520          pmic_da903x
    twl4030_core    twl6040_core
    mfd_madera
    mfd_at91_usart
    mfd_tqmx86
    mfd_iqs62x
    mfd_mp2629
    mfd_mt6360
    mfd_rt4831 mfd_atc260x_i2c
    mfd_simple_mfd_i2c
    mfd_mt6370
    mfd_sy7636a
    mfd_rt5120
    mfd_smpro
    mfd_max77541
    mfd_tps6594_i2c
    mfd_cs42l43_i2c
    mfd_cs40l50_i2c

[→ Device Drivers → Multimedia support]
MUST NOT =
    MEDIA_RADIO_SUPPORT RADIO_ADAPTERS MEDIA_USB_SUPPORT MEDIA_SDR_SUPPORT
SHOULD NOT =
    cypress_firmware      dvb_tuner_dib0070  dvb_tuner_dib0090         media_analog_tv_support
    media_camera_support  media_cec_support  media_digital_tv_support  media_pci_support
    rc_map

# UPDATE: in Debian 8 switched from lircd to ir-keytable.
[→ Device Drivers → Remote Controller support → Remote controller decoders]
SHOULD NOT =
    ir_imon  ir_mce_kbd_decoder  lirc
    ir_imon_decoder ir_imon_raw

[→ Device Drivers → Remote Controller support → Remote Controller devices]
SHOULD NOT =
    ir_ene       ir_fintek  ir_igorplugusb  ir_iguana                 ir_ite_cir      ir_nuvoton
    ir_redrat3   ir_serial                  ir_streamzap  ir_ttusbir  ir_winbond_cir  rc_ati_remote
    rc_loopback
    rc_xbox_dvd
    ir_toy

[→ Device Drivers → Graphics support]
MUST NOT =
    DRM_BOCHS  DRM_CIRRUS_QEMU  DRM_QXL  DRM_UDL  DRM_VIRTIO_GPU  DRM_VMWGFX
    DRM_GUD
    # DRM_ACCEL = "machine learning" bullshit.
    DRM_ACCEL
SHOULD NOT =
    agp         drm_amdgpu              drm_ast         drm_debug_mm
    drm_gma500  drm_i2c_ch7006          drm_i2c_sil164  drm_i915_capture_error  drm_i915_gvt
                drm_load_edid_firmware  drm_mgag200     drm_nouveau             drm_radeon
    drm_vgem    vga_arb                 vga_switcheroo
    drm_vboxvideo
    drm_dp_aux_chardev
    drm_display_dp_aux_chardev
    drm_i2c_nxp_tda9950
    drm_dp_cec
    drm_display_dp_aux_cec
    drm_vkms
    drm_i915_debug_runtime_pm drm_etnaviv
    drm_gm12u320
    drm_debug_dp_mst_topology_refs
    drm_simpledrm
    drm_debug_modeset_lock
    drm_ssd130x
    drm_loongson
    drm_i915_debug_wakeref
    drm_i915_replay_gpu_hangs_api

[→ Device Drivers → Graphics support → /dev/agpgart (AGP Support)]
SHOULD NOT = agp_sis agp_via

# NOTE: if we disable CONFIG_FB entirely, plymouth fails (Xorg still works fine).
[→ Device Drivers → Graphics support → Support for frame buffer devices]
SHOULD NOT =
    fb_3dfx      fb_arc      fb_ark           fb_aty      fb_aty128   fb_cirrus        fb_cyber2000
    fb_hga       fb_kyro                      fb_matrox   fb_mb862xx  fb_mode_helpers  fb_n411
    fb_neomagic  fb_pm2      fb_pm3           fb_radeon   fb_s3       fb_savage        fb_simple
    fb_sis       fb_smscufx  fb_tileblitting  fb_trident  fb_udl      fb_uvesa         fb_vesa
    fb_vga16     fb_via      fb_virtual       fb_voodoo1  fb_vt8623   firmware_edid
    fb_ssd1307
    # FIXME: can we disable CONFIG_FB_DEVICE in Linux 6.6?  Needs testing!!! --twb, March 2024
    # fb_device

[→ Device Drivers → Graphics support → Backlight & LCD device support]
# FIXME: can we disable backlight support ENTIRELY?
#        Needs to be tested experimentally.
#     SHOULD NOT = lcd_class_device backlight_class_device
SHOULD NOT = backlight_apple backlight_qcom_wled
    backlight_ktd253
    backlight_ktz8866
    backlight_ktd2801
    backlight_lm3509

[→ Device Drivers → Graphics support → Console display driver support]
SHOULD NOT =
    framebuffer_console_rotation

[→ Device Drivers → Sound card support → Advanced Linux Sound Architecture]
MUST NOT =
    SND_USB
SHOULD NOT =
    snd_drivers         snd_hda_input_beep  snd_hda_reconfig  snd_mixer_oss  snd_ossemul
    snd_pcm_oss         snd_seq_dummy       snd_sequencer                    snd_support_old_api
    snd_verbose_procfs  snd_x86
    # New in 5.4
    # Something to do with "digital microphones".
    # I think leave enabled (or rather, Debian default) for now?
    #snd_hda_intel_detect_dmic
    snd_utimer

[→ Device Drivers → Sound card support → Advanced Linux Sound Architecture → Generic sound devices]
SHOULD NOT =
    snd_aloop snd_dummy snd_mpu401 snd_mtpav snd_pcsp snd_serial_u16550 snd_virmidi

[→ Device Drivers → Sound card support → Advanced Linux Sound Architecture → PCI sound devices]
SHOULD NOT =
    snd_ad1889    snd_ali5451       snd_als300         snd_als4000   snd_asihpi
    snd_atiixp    snd_atiixp_modem  snd_au8810         snd_au8820    snd_au8830
    snd_azt3328   snd_bt87x         snd_ca0106         snd_cmipci    snd_cs4281
    snd_cs46xx    snd_cs5530        snd_cs5535audio    snd_ctxfi     snd_darla20
    snd_darla24   snd_echo3g        snd_emu10k1        snd_emu10k1x  snd_ens1370
    snd_ens1371   snd_es1938        snd_es1968         snd_fm801     snd_gina20
    snd_gina24    snd_hdsp          snd_hdspm          snd_ice1712   snd_ice1724
    snd_indigo    snd_indigodj      snd_indigodjx      snd_indigoio  snd_indigoiox
    snd_intel8x0  snd_intel8x0m     snd_korg1212       snd_layla20   snd_layla24
    snd_lola      snd_lx6464es      snd_maestro3       snd_mia       snd_mixart
    snd_mona      snd_nm256         snd_oxygen         snd_pcxhr     snd_riptide
    snd_rme32     snd_rme96         snd_rme9652        snd_se6x      snd_sonicvibes
    snd_trident   snd_via82xx       snd_via82xx_modem  snd_virtuoso  snd_vx222
    snd_ymfpci

[→ Device Drivers → Sound card support → Advanced Linux Sound Architecture → PCI sound devices → Intel HD Audio]
SHOULD NOT =
                            snd_hda_codec_ca0110    snd_hda_codec_ca0132  snd_hda_codec_cirrus
    snd_hda_codec_cmedia    snd_hda_codec_conexant                        snd_hda_codec_si3054
    snd_hda_codec_sigmatel  snd_hda_codec_via       snd_hda_hwdep         snd_hda_patch_loader
    snd_hda_codec_cs8409
    snd_hda_codec_senarytech
# https://alloc.cyber.com.au/task/task.php?taskID=34714
SHOULD =
    snd_hda_codec_analog
    snd_hda_codec_hdmi

# https://alloc.cyber.com.au/task/task.php?taskID=34714
#
#     DRIVER=snd_hda_intel
#     PCI_CLASS=40300
#     PCI_ID=8086:A348
#     PCI_SUBSYS_ID=8086:7270
#     PCI_SLOT_NAME=0000:00:1f.3
#     MODALIAS=pci:v00008086d0000A348sv00008086sd00007270bc04sc03i00
#
#     ID_PCI_CLASS_FROM_DATABASE=Multimedia controller
#     ID_PCI_SUBCLASS_FROM_DATABASE=Audio device
#     ID_VENDOR_FROM_DATABASE=Intel Corporation
#     ID_MODEL_FROM_DATABASE=Cannon Lake PCH cAVS
[→ Device Drivers → Sound card support → Advanced Linux Sound Architecture → ALSA for SoC audio support]
MUST NOT =
    # Bluetooth, I think?
    snd_soc_mtk_btcvsd
SHOULD NOT =
    # AMD / non-Intel stuff
    snd_soc_amd_vangogh_mach
    snd_soc_amd_acp                         snd_soc_amd_acp3x
    snd_soc_amd_renoir                      snd_soc_amd_acp5x
    snd_soc_amd_acp6x                       snd_amd_acp_config
    snd_soc_amd_acp_common                  snd_soc_adi
    snd_soc_amd_rpl_acp6x
    snd_atmel_soc                           snd_bcm63xx_i2s_whistler
    snd_designware_i2s                      snd_soc_fsl_asrc
    snd_soc_fsl_sai                         snd_soc_fsl_audmix
    snd_soc_fsl_ssi                         snd_soc_fsl_spdif
    snd_soc_fsl_esai                        snd_soc_fsl_micfil
    snd_soc_fsl_xcvr                        snd_soc_imx_audmux
    snd_i2s_hi6210_i2s                      snd_soc_img
    snd_soc_sof_amd_toplevel                snd_soc_sof_developer_support
    snd_soc_xilinx_i2s                      snd_soc_xilinx_audio_formatter
    snd_soc_xilinx_spdif                    snd_soc_xtfpga_i2s
    snd_simple_card
    snd_soc_amd_ps
    snd_soc_aw88395
    snd_soc_aw88261
    snd_soc_aw87390
    snd_soc_aw88399
    snd_soc_cs35l56_i2c
    snd_soc_sma1303
    snd_soc_wm8961
    # These are Intel, but most are quite old...
    # For now, leave these at Debian default (mostly enabled)
    # snd_soc_intel_catpt    # Haswell and Broadwell
    # snd_sst_atom_hifi2_platform_pci  # Merrifield
    # snd_sst_atom_hifi2_platform_acpi  # Baytrail, Cherrytrail
    # snd_soc_intel_skylake             # metalist for all skylake/sst (inc. cannonlake)
    # snd_soc_intel_apl                 # Broxton/ApolloLake
    # snd_soc_intel_kbl                 # Kabylake
    # snd_soc_intel_glk                 # GeminiLake
    # snd_soc_intel_cfl                 # CoffeeLake
    # snd_soc_intel_cml_h               # CometLake-H
    # snd_soc_intel_cml_lp              # CometLake-LP
    # snd_soc_intel_mach
    # snd_soc_intel_user_friendly_long_names
    # snd_soc_intel_sof_wm8804_mach
    # snd_soc_intel_cml_lp_da7219_max98357a_mach
    # snd_soc_intel_sof_ssp_amp_mach
    # snd_soc_sof_acpi       # "required to enable Intel Broadwell/Baytrail/Cherrytrail devices" (i.e. old stuff)
    # snd_soc_sof_merrifield
    # snd_soc_sof_apollolake
    # snd_soc_sof_geminilake
    # snd_soc_sof_coffeelake
    # snd_soc_sof_cometlake
    # snd_soc_sof_icelake
    # snd_soc_sof_jasperlake
    # snd_soc_sof_tigerlake
    # snd_soc_sof_elkhartlake
    # snd_soc_sof_alderlake
    # snd_soc_sof_meteorlake
    # snd_soc_sof_lunarlake = kernel/sound/soc/sof/intel/snd-sof-pci-intel-lnl.ko
    # snd_soc_sof_hda_link   # Not sure what this is exactly, sounds like it's for audio-over-HDMI?
    # snd_soc_sof_hda_audio_codec  # Not sure -- sub-choice below snd_soc_sof_hda_link.
    #
    # AMC complained "we bought some random desktops and sound doesn't work".
    # For more human-facing details, see this commit message:
    # https://github.com/cyberitsolutions/bootstrap2020/commit/e5bc171a6c93f708d00516326e30e05a58ded48b
    # I enabled (some of) SND_SOC_SOF and they said "it's fixed now".
    # AFTER that, these Intel drivers appeared (I think.  I'm 95% sure).
    # So PROBABLY we do not need to enable them, and can keep the .ko list tidy.
    snd_soc_intel_sof_es8336_mach
    snd_hda_scodec_cs35l41_i2c
    snd_soc_sof_intel_mtl
    snd_hda_scodec_cs35l41
    snd_hda_scodec_cs35l41_spi
    snd_hda_scodec_cs35l56_i2c
    snd_soc_chv3_i2s snd_soc_chv3_codec
    # New in 6.7 / 2024
    snd_soc_intel_sof_da7219_mach
MUST =
    # cAVS 1.5 inc. Skylake, Kabylake, Amberlake, Apollolake -- not needed?  Off in Debian stock kernel
    # UPDATE: off by default in Linux 6.5~bpo12
    #         on by default in Linux 6.6~bpo12
    #         turning off because
    #         1) we didn't need it before; and
    #         2) it is pulling in kernel/drivers/firmware/cirrus/cs_dsp.ko
    #         Note that what AMC have (had?) is Cannon Lake cAVS, which is 1.8.
    #         snd_soc_intel_avs claims to be 1.5, i.e. *older* and
    #         unlikely to appear in new systems?
    #         https://thesofproject.github.io/latest/platforms/intel-cavs/index.html
    #         --twb, March 2024
    # UPDATE: The Debian 12 upgrade from 6.11.10 to 6.12.9
    #         remove all of these drivers:
    #
    #             CONFIG_SND_SOC_INTEL_SKYLAKE=m
    #             CONFIG_SND_SOC_INTEL_SKL=m
    #             CONFIG_SND_SOC_INTEL_APL=m
    #             CONFIG_SND_SOC_INTEL_KBL=m
    #             CONFIG_SND_SOC_INTEL_GLK=m
    #             CONFIG_SND_SOC_INTEL_CNL=m
    #             CONFIG_SND_SOC_INTEL_CFL=m
    #
    #         According to this commit, SND_SOC_INTEL_AVS replaces them.
    #         https://github.com/torvalds/linux/commit/a882f4d750ee0ec7e264c015019d0d642e136ff6
    #
    #         Therefore we are now forced to switch to avs.
    #         These drivers are only needed for recent mainboards AMC got
    #         (I think) without going through hardware approval.
    #         I don't have one, so I CANNOT TEST if this causes a regression.
    #         --twb, January 2025
    snd_soc_intel_avs
    # FIXME: Are the next three (below) obsoleted by avs (above)?
    #        Are they needed by any hardware at AMC?
    #        https://github.com/cyberitsolutions/bootstrap2020/commit/e5bc171a6c93f708d00516326e30e05a58ded48b
    snd_soc_sof_toplevel
    snd_soc_sof_coffeelake
    snd_soc_sof_kabylake
SHOULD =
    # Meta-choice that, when =n, skips all Intel choices.
    snd_soc_intel_sst_toplevel
    snd_soc_sof_intel_toplevel
    # "required to enable Intel Skylake+ devices" (inc. SND_SOC_SOF_COFFEELAKE)
    snd_soc_sof_pci
    # Skylake --- SEEN IN LSMOD ON STAFF MACHINE, AMC, BLACK CHASSIS
    snd_soc_intel_skl


[→ Device Drivers → Sound card support → Advanced Linux Sound Architecture → ALSA for SoC audio support → CODEC drivers]
# AFAICT every single one of these is non-Intel, therefore turn them off.
# Debian turns most of these off by default anyway.
# Most of these are implicitly pulled in by the SOC/SOF drivers, e.g.
#   snd_soc_intel_skl_rt286_mach --selects--> snd_soc_hdac_hdmi
# MUST NOT =
#     # Why is this getting re-selected?
#     SND_SOC_WM_ADSP
MUST NOT =
    snd_hda_scodec_tas2781_i2c
    snd_soc_tas2781_i2c
    snd_soc_tas2781_comlib
    snd_soc_tas2781_fmwlib
SHOULD NOT =
    # Stock Debian kernel enables these
    snd_soc_wm_adsp                 snd_soc_adau7002
    snd_soc_cs35l41_lib             snd_soc_cs35l41
    snd_soc_cs35l41_spi             snd_soc_cx2072x
    snd_soc_cs35l45_i2c
    snd_soc_da7213                  snd_soc_da7219
    snd_soc_dmic                    snd_soc_es8316
    snd_soc_hdac_hdmi               snd_soc_hdac_hda
    snd_soc_max98090                snd_soc_max98357a
    snd_soc_max98927                snd_soc_max98373
    snd_soc_max98373_i2c            snd_soc_max98373_sdw
    snd_soc_max98390                snd_soc_rl6231
    snd_soc_max98396
    snd_soc_max98388
    snd_soc_rl6347a                 snd_soc_rt286
    snd_soc_rt1011                  snd_soc_rt1015
    snd_soc_rt1015p                 snd_soc_rt1308
    snd_soc_rt1308_sdw              snd_soc_rt1316_sdw
    snd_soc_rt5514                  snd_soc_rt5514_spi
    snd_soc_rt5640                  snd_soc_rt5645
    snd_soc_rt5651                  snd_soc_rt5663
    snd_soc_rt5670                  snd_soc_rt5677
    snd_soc_rt5677_spi              snd_soc_rt5682
    snd_soc_rt5682_i2c              snd_soc_rt5682_sdw
    snd_soc_rt5682s                 snd_soc_rt700
    snd_soc_rt700_sdw               snd_soc_rt711
    snd_soc_rt711_sdw               snd_soc_rt711_sdca_sdw
    snd_soc_rt715                   snd_soc_rt715_sdw
    snd_soc_rt715_sdca_sdw          snd_soc_sdw_mockup
    snd_soc_ssm4567                 snd_soc_ts3a227e
    snd_soc_nau8821                 snd_soc_nau8824
    snd_soc_nau8825
    # Stock Debian kernel disables these
    snd_soc_ac97_codec              snd_soc_adau1372_i2c
    snd_soc_adau1372_spi            snd_soc_adau1701
    snd_soc_adau1761_i2c            snd_soc_adau1761_spi
    snd_soc_adau7118_hw             snd_soc_adau7118_i2c
    snd_soc_ak4104                  snd_soc_ak4118
    snd_soc_ak4375                  snd_soc_ak4458
    snd_soc_ak4554                  snd_soc_ak4613
    snd_soc_ak4642                  snd_soc_ak5386
    snd_soc_ak5558                  snd_soc_alc5623
    snd_soc_ak4619
    snd_soc_aw8738                  snd_soc_bd28623
    snd_soc_bt_sco                  snd_soc_cros_ec_codec
    snd_soc_cs35l32                 snd_soc_cs35l33
    snd_soc_cs35l34                 snd_soc_cs35l35
    snd_soc_cs35l36                 snd_soc_cs35l41_i2c
    snd_soc_cs42l42                 snd_soc_cs42l51_i2c
    snd_soc_cs42l52                 snd_soc_cs42l56
    snd_soc_cs42l73                 snd_soc_cs4234
    snd_soc_cs4265                  snd_soc_cs4270
    snd_soc_cs4271_i2c              snd_soc_cs4271_spi
    snd_soc_cs42xx8_i2c             snd_soc_cs43130
    snd_soc_cs4341                  snd_soc_cs4349
    snd_soc_cs53l30                 snd_soc_es7134
    snd_soc_cs530x_i2c
    snd_soc_es7241                  snd_soc_es8328_i2c
    snd_soc_es8328_spi              snd_soc_gtm601
    snd_soc_es8311
    snd_soc_ics43432                snd_soc_inno_rk3036
    snd_soc_max98088                snd_soc_max98504
    snd_soc_max9867                 snd_soc_max98520
    snd_soc_max9860                 snd_soc_msm8916_wcd_digital
    snd_soc_pcm1681                 snd_soc_pcm1789_i2c
    snd_soc_pcm179x_i2c             snd_soc_pcm179x_spi
    snd_soc_pcm186x_i2c             snd_soc_pcm186x_spi
    snd_soc_pcm3060_i2c             snd_soc_pcm3060_spi
    snd_soc_pcm3168a_i2c            snd_soc_pcm3168a_spi
    snd_soc_pcm5102a                snd_soc_pcm512x_i2c
    snd_soc_pcm512x_spi             snd_soc_rk3328
    snd_soc_rt5616                  snd_soc_rt5631
    snd_soc_rt5659                  snd_soc_rt9120
    snd_soc_rtq9128
    snd_soc_sgtl5000                snd_soc_simple_amplifier
    snd_soc_simple_mux              snd_soc_spdif
    snd_soc_ssm2305                 snd_soc_ssm2518
    snd_soc_ssm2602_spi             snd_soc_ssm2602_i2c
    snd_soc_sta32x                  snd_soc_sta350
    snd_soc_sti_sas                 snd_soc_tas2552
    snd_soc_tas2562                 snd_soc_tas2764
    snd_soc_tas2770                 snd_soc_tas5086
    snd_soc_tas571x                 snd_soc_tas5720
    snd_soc_tas5805m                snd_soc_tas6424
    snd_soc_tda7419                 snd_soc_tfa9879
    snd_soc_tfa989x                 snd_soc_tlv320adc3xxx
    snd_soc_tlv320aic23_i2c         snd_soc_tlv320aic23_spi
    snd_soc_tlv320aic31xx           snd_soc_tlv320aic32x4_i2c
    snd_soc_tlv320aic32x4_spi       snd_soc_tlv320aic3x_i2c
    snd_soc_tlv320aic3x_spi         snd_soc_tlv320adcx140
    snd_soc_tscs42xx                snd_soc_tscs454
    snd_soc_uda1334                 snd_soc_wcd9335
    snd_soc_wcd938x_sdw             snd_soc_wm8510
    snd_soc_wm8523                  snd_soc_wm8524
    snd_soc_wm8580                  snd_soc_wm8711
    snd_soc_wm8728                  snd_soc_wm8731
    snd_soc_wm8731_i2c
    snd_soc_wm8737                  snd_soc_wm8741
    snd_soc_wm8750                  snd_soc_wm8753
    snd_soc_wm8770                  snd_soc_wm8776
    snd_soc_wm8782                  snd_soc_wm8804_i2c
    snd_soc_wm8804_spi              snd_soc_wm8903
    snd_soc_wm8904                  snd_soc_wm8960
    snd_soc_wm8940
    snd_soc_wm8962                  snd_soc_wm8974
    snd_soc_wm8978                  snd_soc_wm8985
    snd_soc_wsa881x                 snd_soc_zl38060
    snd_soc_max9759                 snd_soc_mt6351
    snd_soc_mt6357
    snd_soc_mt6358                  snd_soc_mt6660
    snd_soc_nau8315                 snd_soc_nau8540
    snd_soc_nau8810                 snd_soc_nau8822
    snd_soc_tpa6130a2               snd_soc_lpass_wsa_macro
    snd_soc_lpass_va_macro          snd_soc_lpass_rx_macro
    snd_soc_lpass_tx_macro
    # New in 6.0
    snd_soc_hda snd_soc_tas2780
    snd_soc_cs42l83
    snd_soc_es8326
    snd_soc_src4xxx_i2c
    snd_soc_nau8315
    snd_soc_rt1308
    # FUCK OFF SND_SOC_WM_ADSP and kernel/drivers/firmware/cirrus/cs_dsp.ko
    snd_soc_cs47l24
    snd_soc_wm5102
    snd_soc_wm5110
    snd_soc_wm2200
    snd_soc_cs35l41_spi
    snd_soc_cs35l41_i2c
    snd_soc_cs35l45_spi
    snd_soc_cs35l45_i2c
    snd_soc_cs35l56
    snd_soc_madera
    snd_soc_cs47l24
    snd_soc_wm5102
    snd_soc_wm5110
    snd_soc_wm2200
    snd_soc_cs35l41_spi
    snd_soc_cs35l41_i2c
    snd_soc_cs35l45_spi
    snd_soc_cs35l45_i2c
    snd_soc_cs35l56
    snd_soc_pcm6240


[→ Device Drivers → HID support]
SHOULD NOT =
    hidraw uhid hid_battery_strength intel_ish_hid
    amd_sfh_hid

[→ Device Drivers → HID support → Special HID drivers]
MUST NOT = hid_u2fzero
SHOULD NOT =
    hid_a4tech        hid_accutouch     hid_acrux           hid_alps
    hid_apple         hid_appleir       hid_asus            hid_aureal
    hid_belkin        hid_betop_ff      hid_cherry          hid_chicony
    hid_cmedia        hid_corsair       hid_cp2112          hid_cypress
    hid_dragonrise    hid_elecom        hid_elo             hid_ems_ff
    hid_ezkey         hid_gembird       hid_gfrm            hid_greenasia
    hid_gt683r        hid_gyration      hid_holtek
    hid_icade         hid_ite           hid_kensington      hid_keytouch
    hid_kye           hid_lcpower       hid_led             hid_lenovo
                      hid_logitech      hid_logitech_hidpp  hid_magicmouse
    hid_mayflash      hid_microsoft     hid_monterey        hid_multitouch
    hid_megaworld_ff
    hid_nti           hid_ntrig         hid_ortek           hid_pantherlord
    hid_penmount      hid_petalynx      hid_picolcd         hid_plantronics
    hid_primax        hid_prodikeys     hid_retrode         hid_rmi
    hid_roccat        hid_saitek        hid_samsung         hid_sensor_custom_sensor
    hid_sensor_hub    hid_smartjoyplus  hid_sony            hid_speedlink
    hid_steelseries   hid_sunplus       hid_thingm          hid_thrustmaster
    hid_tivo          hid_topseed       hid_twinhan         hid_uclogic
    hid_topre
    hid_udraw_ps3     hid_wacom         hid_waltop          hid_wiimote
    hid_xinmo         hid_zeroplus      hid_zydacron
    hid_redragon hid_steam
    hid_cougar
    hid_macally hid_viewsonic hid_maltron
    hid_creative_sb0540
    hid_jabra
    hid_glorious
    hid_mcp2221
    hid_vivaldi
    hid_bigben_ff
    hid_elan
    hid_playstation hid_semitek
    hid_xiaomi hid_nintendo
    hid_letsketch
    hid_razer
    hid_sigmamicro
    hid_vrc2
    hid_pxrc
    hid_evision
    hid_google_stadia_ff
    hid_mcp2200
    hid_winwing

[→ Device Drivers → HID support → USB HID support]
SHOULD NOT =
    hid_pid usb_hiddev

[→ Device Drivers → HID support → I2C HID support]
MUST NOT =
    I2C_HID
    I2C_HID_ACPI

[→ Device Drivers → USB support]
MUST NOT =
    TYPEC                   TYPEC_TCPM        TYPEC_UCSI                USB_ACM
    USB_ADUTUX              USB_APPLEDISPLAY  USB_ATM                   USB_CATC
    USB_CDC_PHONET          USB_CHAOSKEY      USB_CYPRESS_CY7C63        USB_CYTHERM
    USB_EHSET_TEST_FIXTURE  USB_EMI26         USB_EMI62                 USB_ETH
    USB_EZUSB_FX2                             USB_FUNCTIONFS            USB_GADGET
    USB_GADGETFS            USB_G_SERIAL      USB_IDMOUSE               USB_IOWARRIOR
    USB_IPHETH              USB_ISIGHTFW      USB_KAWETH                USB_LCD
    USB_LD                                    USB_LEDS_TRIGGER_USBPORT  USB_LEGOTOWER
    USB_MDC800              USB_MICROTEK      USB_MON                   USB_PEGASUS
    USB_PHY                 USB_PRINTER                                 USB_RTL8150
    USB_RTL8152             USB_SERIAL        USB_SEVSEG                USB_SISUSBVGA
    USB_SL811_HCD           USB_STORAGE       USB_TEST                  USB_TMC
    USB_TRANCEVIBRATOR                        USB_UAS                   USB_USBNET
    USB_WDM                                   USB_YUREX
    USB_EHCI_FSL
    USB_CONN_GPIO
    USB_CDNS3
    USB_ROLE_SWITCH
    USB4
    APPLE_MFI_FASTCHARGE
    USB_XHCI_PCI_RENESAS
    USB_CDNS_SUPPORT
    usb_dwc2 usb_dwc3
SHOULD NOT =
    usb_ohci_hcd_platform  usb_ehci_hcd_platform  usb_xhci_platform
    usb_pci_amd
    # Linux 6.11 includes "Intel La Jolla Cove Adapter", which https://www.phoronix.com/news/Intel-La-Jolla-Cove-Linux I think is saying it's a "vision sensing" system.
    # I think that means it's for, like, a camera trying to track cars on a road, or customers in a store, and *we* don't care about it for PrisonPC.
    i2c_ljca spi_ljca gpio_ljca usb_ljca


# We need this in 5.x because SND_HDA_CODEC_REALTEK (sound card) pulls in NEW_LEDS.
# So we have to then blacklist all the other LED drivers.
[→ Device Drivers → LED Support]
SHOULD NOT = new_leds
  # AFAICT this is a Samsung "light strip" that you mount behind your TV, so
  # the wall behind the TV is blue when the TV shows blue, and red when it shows red, &c.
  leds_bd2802
  # We are a desktop, not a NAS
  leds_intel_ss4200
  # AFAICT this is a small LCD panel from NXP meant for arduino-like devices.
  leds_pca955x
  leds_pca995x
  # Whatever, I'm sick of investigating the rest.
  leds_gpio
  leds_lp3944
  leds_apu
  leds_aw200xx
  leds_brightness_hw_changed
  leds_lt3593
  leds_is31fl319x
  leds_bd2606mvv
  leds_ktd202x
  leds_trigger_input_events

# SND_HDA_GENERIC pulls in LEDS_TRIGGER_AUDIO (illuminate LED when [not] muted).
# So we have to blacklist the rest...
[→ Device Drivers → LED Support → LED Trigger support]
SHOULD NOT = leds_triggers
    leds_trigger_activity   leds_trigger_audio      leds_trigger_backlight  leds_trigger_camera     leds_trigger_cpu
    leds_trigger_default_on leds_trigger_disk       leds_trigger_gpio       leds_trigger_heartbeat  leds_trigger_netdev
    leds_trigger_oneshot    leds_trigger_panic      leds_trigger_pattern    leds_trigger_timer      leds_trigger_transient
    leds_trigger_tty

[→ Device Drivers → EDAC (Error Detection And Correction) reporting]
SHOULD NOT =
    edac_legacy_sysfs edac_decode_mce

[→ Device Drivers → Real Time Clock]
MUST NOT =
    # Android emulator (i.e. VM)
    RTC_DRV_GOLDFISH
SHOULD NOT =
    rtc_nvmem
    rtc_drv_max31335
    rtc_drv_rx8111
    rtc_drv_sd2405al

[→ Device Drivers → Common Clock Framework]
SHOULD NOT = clk_icst clk_sp810 clk_sp810

[→ Device Drivers → DMA Engine support]
MUST NOT =
    # only used by qemu?
    UDMABUF
SHOULD NOT =
    qcom_hidma qcom_hidma_mgmt dw_dmac dw_dmac_pci altera_msgdma
    dw_edma dw_edma_pcie
    sf_pdma
    dmabuf_heaps
    xilinx_zynqmp_dpdma
    amd_ptdma dmabuf_sysfs_stats
    xilinx_xdma
    amd_qdma
    # This is a "xeon" thing, so probably servers only?
    intel_idxd
    intel_idxd_compat
    # I think this is for special subset of PCIe chips that do
    # lane-splitting, e.g. for 4 NVMe cards on one 4-lane PCIe slot.
    # Probably not on a PrisonPC desktop anyway.
    plx_dma
    xilinx_dma

[→ Device Drivers → Virtio drivers]
MUST NOT =
    VIRTIO_BALLOON  VIRTIO_PCI

[→ Device Drivers → Staging drivers]
MUST NOT =
    staging_media
SHOULD NOT =
    comedi et131x rts5208 speakup usbip_core
    xil_axis_fifo erofs_fs
    fieldbus_dev

# The "naughty modules" detector misdetects "intel_vbtn" as bluetooth-related.
# Since we don't care, just remove it rather than making the detector smarter.
[→ Device Drivers → X86 Platform Specific Device Drivers]
MUST NOT =
    TOSHIBA_BT_RFKILL ASUS_WIRELESS ACER_WIRELESS
SHOULD NOT =
    x86_platform_drivers_hp
    acer_wmi      acerhdf        acpi_cmpc            acpi_toshiba    alienware_wmi
    apple_gmux    asus_laptop    dell_laptop          dell_smo8800    dell_wmi
    dell_wmi_aio  dell_wmi_led   fujitsu_laptop       fujitsu_tablet  hp_accel
    hp_wmi        ibm_rtl        intel_ips            intel_rst       intel_smartconnect
    msi_wmi       mxm_wmi        panasonic_laptop     pvpanic         samsung_laptop
    samsung_q10   sensors_hdaps  surface_pro3_button  thinkpad_acpi   topstar_laptop
    inspur_platform_profile
    toshiba_haps  wmi_bmof
    dell_smbios
    gpd_pocket_fan
    intel_vbtn
    intel_atomisp2_pm
    intel_atomisp2_led
    lg_laptop huawei_wmi xiaomi_wmi
    toshiba_wmi
    nvidia_wmi_ec_backlight barco_p50_gpio
    system76_acpi
    surface_platforms
    gigabyte_wmi amd_pmc adv_swbutton x86_platform_drivers_dell wireless_hotkey thinkpad_lmi
    lenovo_ymc
    yogabook
    meegopad_anx7428
    acpi_quickstart
    msi_wmi_platform
    lenovo_wmi_camera
    # intel_ifs is for testing a CPU to see if the Chinese factory
    # tampered with it during fabrication.
    # https://static.lwn.net/kerneldoc/x86/ifs.html
    # We do NOT need this for end user systems once in use by end users.
    intel_ifs
    # This is (mostly) for running VMs and for avoiding DMA attacks by physically inserted malicious devices (DMA attack).
    # I left the underlying drivers at Debian defaults, but
    # I am explicitly removing the userspace injection option,
    # at least until someone says they need it.
    iommufd
    # We don't do mainboard firmware updates via... whatever this is.
    intel_wmi_sbl_fw_update
    # PrisonPC desktops aren't expected to have thunderbolt.
    # They only have USB at all for the keyboard/mouse.
    intel_wmi_thunderbolt
    # Only applies to intel xeon *servers*
    intel_speed_select_interface
    # Intel SCU is probably "Storage Control Unit".
    # i.e. it's basically doing the same job as the PCH.
    # i.e. it's mostly for hard disks.
    # On that basis, disable it until we know we need it.
    # it maybe replaced "PMC" ("power management controller")???
    intel_scu intel_scu_ipc intel_scu_pci intel_scu_platform intel_scu_ipc_util
    # "Some laptops require this driver"
    intel_hid_event
    # This sounds super weird, like "chakra-healing amethyst crystal driver".
    # OK on reading further, I think maybe it's a dosimeter?
    intel_sar_int1092
    amd_hsmp
    amd_wbrf silicom_platform
    asus_tf103c_dock
    siemens_simatic_ipc
    winmate_fm07_keys
    sel3350_platform
    amd_pmf
    # 1) intel_pmc_core = "Power Management Controller" for SoCs.
    #    MIGHT be useful for letting CPU idle better (saves power, invisible to users).
    #    MIGHT only apply to suspend-to-RAM stuff (SHOULD NOT / MAY).
    # 2) intel_pmt_* = "Platform Monitory Technology"
    #    I'm 95% sure we don't care (SHOULD NOT / MAY).
    intel_pmt_telemetry intel_pmt_crashlog
    # "SDSI" is some kind of server thing where Intel makes identical good CPUs,
    # but sells some of them in "crap mode only".
    # SDSI is how you prove you've paid to "unlock" the good mode.
    # I'm pretty fucking sure desktops won't have to care about this.
    # https://github.com/intel/intel-sdsi
    intel_sdsi
    # https://github.com/intel/tpmi_power_management says intel_tpmi is for "Xeon" processors, i.e. this is server stuff.
    intel_tpmi
    # Uncore is "frequency limits on supported server platforms".
    # We don't run this kernel on servers.
    intel_uncore_freq_control
    # https://github.com/torvalds/linux/commit/5d8813271f8a7c86027afb2ef554f2a5a9ba7c15
    acpi_table_upgrade

    cznic_platforms
    lan966x_oic

    # <twb> serial-multi-instantiate looks shady af
    # <twb> Symbol: SERIAL_MULTI_INSTANTIATE [=m]
    # <twb> Prompt: Serial bus multi instantiate pseudo device driver
    # <twb> Location: -> Device Drivers -> X86 Platform Specific Device Drivers (X86_PLATFORM_DEVICES [=y])
    # <twb> Implied by [n]: SND_HDA_SCODEC_CS35L56_[I2C|SPI] && ⋯
    # <twb> Suggests I can chuck it
    # <twb> Because we're currently building snd-soc-cs35l41 &c but not snd-soc-cs35l56
    serial_multi_instantiate

[→ Device Drivers → PHY Subsystem]
MUST NOT =
    usb_lgm_phy phy_intel_lgm_emmc
SHOULD NOT =
    generic_phy bcm_kona_usb2_phy phy_pxa_28nm_hsic phy_pxa_28nm_usb2
    phy_can_transceiver
    # I *think* this is mostly a helper for Broadcom NICs.
    fixed_phy

[→ Device Drivers → Performance Monitor Support]
SHOULD NOT =
    dwc_pcie_pmu

[→ Device Drivers → Reliability, Availability and Serviceability (RAS) features]
SHOULD NOT =
    amd_atl

[→ Firmware Drivers]
SHOULD NOT =
    dcdbas  dell_rbu  dmi_sysfs  edd  firmware_memmap  iscsi_ibft_find
    sysfb_simplefb
    imx_scmi_misc_drv
    # only used by qemu?
    fw_cfg_sysfs
    # only used by chromebooks (and coreboot)
    google_firmware

[→ File systems]
MUST NOT =
    FS_ENCRYPTION
    # NOTE: upstream Kconfig says
    #          Disable this to get a possibly more secure configuration, but that
    #          might not be backward compatible with previous kernels.
    #       therefore we do disable it, since the overlay isn't shared with older kernels.
    OVERLAY_FS_REDIRECT_ALWAYS_FOLLOW
    OVERLAY_FS_NFS_EXPORT
    # new in 4.19
    OVERLAY_FS_METACOPY
    # New in 6.6
    OVERLAY_FS_DEBUG
SHOULD NOT =
    autofs_fs   btrfs_fs   cuse                         dlm      exportfs_block_ops  ext2_fs
    ext3_fs     ext4_fs    fanotify_access_permissions  fs_dax   fuse_fs             gfs2_fs
    jfs_fs      nilfs2_fs  ocfs2_fs                     qfmt_v1  quota               reiserfs_fs
    xfs_fs      zisofs
    exfat_fs
    fs_verity
    zonefs_fs
    ntfs3_fs

# AFAICT "fscache" means making a cache in *local nonvolatile storage* of a remote filesystem.
# i.e. it is NOT needed for the ordinary caching that happens inside the NFS client.
# i.e. it is NOT useful to us as we have diskless systems.
# https://docs.kernel.org/filesystems/caching/fscache.html
# https://www.kernel.org/doc/html/latest/filesystems/caching/cachefiles.html
[→ File systems → Caches]
SHOULD NOT =
    cachefiles  fscache_stats
    fscache

[→ File systems → DOS/FAT/NT Filesystems]
SHOULD NOT =
    msdos_fs ntfs_fs vfat_fs

[→ File systems → Pseudo filesystems]
SHOULD NOT =
    proc_kcore proc_page_monitor hugetlbfs configfs_fs
    # We don't need this.  It's off by default anyways as at 6.6bpo12.
    tmpfs_quota

[→ File systems → Miscellaneous filesystems]
SHOULD NOT =
    adfs_fs    affs_fs                     befs_fs        bfs_fs         cramfs      ecrypt_fs
    efivar_fs  efs_fs                      f2fs_fs        hfs_fs         hfsplus_fs  hpfs_fs
    jffs2_fs                 minix_fs      omfs_fs        pstore_ram     qnx4fs_fs   qnx6fs_fs
    romfs_fs                 squashfs_lzo  squashfs_zlib                 sysv_fs     ubifs_fs
    ufs_fs     vxfs_fs
    orangefs_fs
    bcachefs_fs
    ## FIXME: is APEI important enough to leave pstore enabled?
    ##pstore acpi_apei            # inmates with a root privesc exploit shouldn't be able to store things in desktop nvram
    ## UPDATE: per f2f w/russm,
    ##
    ##   * pstore is "for" the kernel to keep reminders;
    ##     userland isn't supposed to be able to write into it:
    ##
    ##       root@het:~# date >/sys/fs/pstore/x
    ##       -bash: /sys/fs/pstore/x: Permission denied
    ##
    ##   * the filesystem is *mounted* rw because userland *is* supposed to
    ##     *delete* things from it, to indicate they've been processed (e.g. into syslog).
    ##
    ##   * pstore needs a backend to remember anything (we think);
    ##     on x86-64 there are only two drivers (we think): EFI and RAM.
    ##     And PSTORE_RAM is definitely disabled.
    ##
    ## So at least in theory, having /sys/fs/pstore mounted is still harmless
    ## because 1) only the kernel can put data there; and 2) it won't be
    ## persistent across a reboot anyway.  --twb, Aug 2015
    ## https://alloc.cyber.com.au/task/task.php?taskID=30092
    ##
    ## UPDATE Jan 2020 -- in Linux 5.6, pstore is the only thing keeping CONFIG_CRYPTO enabled.
    ## Therefore remove it, but maybe put it back later if "reasonable"?
    ## Note that APEI claims to be useful for "NMI handling especially",
    ## which I think is a performance thing?
    ## https://github.com/torvalds/linux/blob/master/drivers/acpi/apei/Kconfig#L8
    ## https://en.wikipedia.org/wiki/Non-maskable_interrupt
    ##
    ## UPDATE Jul 2022 -- bump pstore from SHOULD NOT to MUST NOT, only because
    ## I removed the super-paranoid "make sure it is mounted -o ro" from inmate fstab.
    ## Right now APEI is included, but pstore is not.  Yay, I think?
    acpi_apei
MUST NOT =
    pstore

[→ File systems → Network File Systems]
MUST NOT =
    smb_server
    cifs_allow_insecure_legacy
SHOULD NOT =
    9p_fs   afs_fs  ceph_fs          cifs          coda_fs  nfs_swap  nfs_v2  nfs_v3_acl
    nfs_v3  nfsd    rpcsec_gss_krb5  sunrpc_debug

[→ File systems → Native language support]
SHOULD NOT =
    nls_codepage_1250  nls_codepage_1251  nls_codepage_437  nls_codepage_737  nls_codepage_775
    nls_codepage_850   nls_codepage_852   nls_codepage_855  nls_codepage_857  nls_codepage_860
    nls_codepage_861   nls_codepage_862   nls_codepage_863  nls_codepage_864  nls_codepage_865
    nls_codepage_866   nls_codepage_869   nls_codepage_874  nls_codepage_932  nls_codepage_936
    nls_codepage_949   nls_codepage_950   nls_iso8859_1     nls_iso8859_13    nls_iso8859_14
    nls_iso8859_15     nls_iso8859_2      nls_iso8859_3     nls_iso8859_4     nls_iso8859_5
    nls_iso8859_6      nls_iso8859_7      nls_iso8859_8     nls_iso8859_9     nls_koi8_r
    nls_koi8_u         nls_mac_celtic     nls_mac_centeuro  nls_mac_croatian  nls_mac_cyrillic
    nls_mac_gaelic     nls_mac_greek      nls_mac_iceland   nls_mac_inuit     nls_mac_roman
    nls_mac_romanian   nls_mac_turkish

[→ Kernel hacking]
# I think in 5.18 DEBUG_INFO=n changed DEBUG_INFO_NONE=y,
# because there are now several choices when you DO want it enabled.
# Same thing happens in 5.19 for "Choose kernel unwinder" (UNWINDER_ORC)
MUST = DEBUG_INFO_NONE UNWINDER_ORC
# These two options harden the kernel against attacks by the local root user.
# They were on before, but implicitly via Debian/Linux defaults.  Be explicit.
SHOULD = strict_devmem io_strict_devmem debug_irqflags
MUST NOT =
    DEBUG_INFO KASAN KCOV RUNTIME_TESTING_MENU
    DEBUG_MISC
SHOULD NOT =
    debug_info_dwarf_toolchain_default
                            debug_bugverbose  debug_list          early_printk
    fault_injection         ftrace            magic_sysrq_serial  notifier_error_injection
    sched_debug             schedstats        stacktrace          test_firmware
                            x86_debug_fpu     x86_verbose_bootup
    debug_plist
    test_lockup
    debug_preempt
    # We don't actually want DEBUG_KERNEL, but CONFIG_EXPERT=y turns it on.
    # FIXME: actually, can we just "SHOULD NOT = EXPERT" ???
    debug_kernel
    # Stop asking me about this, 5.19!
    unwinder_guess

[→ Kernel hacking → Compile-time checks and compiler options]
SHOULD NOT =
    debug_fs headers_install
    debug_info_btf_modules
    module_allow_btf_mismatch

[→ Kernel hacking → Network Debugging]
SHOULD NOT =
    net_dev_refcnt_tracker
    net_ns_refcnt_tracker
    debug_net

[→ Kernel hacking → Memory Debugging]
SHOULD NOT =
    page_table_check

# NOTE: NFSv4 turns on "keys" in (at least) 4.19+.
[→ Security options]
MUST NOT =
    persistent_keyrings
    encrypted_keys
SHOULD NOT =
    keys
    key_dh_operations
    ##FIXME: LEAVE ENABLED FOR NOW?## security_apparmor
    security_selinux security_smack security_tomoyo
    # "integrity" was keeping several crypto modules installed
    integrity
    # "security_apparmor_hash" this was keeping crypto_sha1 installed
    security_apparmor_hash
    security_ipe

[→ Cryptographic API]
SHOULD NOT =
    # As at 5.10, NF_TABLES → LIBCRC32C → CRYPTO_CRC32C → CRYPTO
    # https://github.com/torvalds/linux/blame/master/net/netfilter/Kconfig#L449
    # https://github.com/torvalds/linux/commit/346e320cb2103edef709c4466a29140c4a8e527a
    # AFAICT this is still SCTP's fault, but we can no longer stop it by saying "we do not use SCTP".
    # File a bug upstream?
    CRYPTO CRYPTO_CRC32C LIBCRC32C
    crypto_lib_utils
MUST NOT =
    # CRYPTO_AES is required by INET&&NET, i.e. always.
    # UPDATE this problem went away sometime between 5.2 and 5.3.  Yay!
    # Needed again in 5.10, by NF_TABLES.

    # CRYPTO_AES is required by INET&&NET, i.e. always.
    # Should we therefore also enable AES_NI_INTEL (faster AES)?
    #
    # UPDATE: per discussion with russm (Oct 2018),
    #  • the risk is very small; and
    #  • the gain is very big; but
    #    only for AES performed by the kernel (e.g. LUKS, but not not curl gnutls).
    # I am therefore inclined to let AES optimizations be allowed
    # (*ONLY* AES, not e.g. camellia via AES-NI).
    #
    # UPDATE: doing so pulls in helpers to choose the best AES implementation on-the-fly:
    #   crypto_manager crypto_manager2 crypto_cryptd crypto_acomp2 crypto_akcipher2 crypto_kpp2
    # …that pushes it back into the "too hard, don't care" basket.
    ASYMMETRIC_PUBLIC_KEY_SUBTYPE      CRYPTO_CHACHA20POLY1305           CRYPTO_ECHAINIV
    CRYPTO_ACOMP2                      CRYPTO_AES_NI_INTEL
    CRYPTO_AKCIPHER                    CRYPTO_AKCIPHER2                  CRYPTO_ANSI_CPRNG
    CRYPTO_ANUBIS                      CRYPTO_ARC4                       CRYPTO_AUTHENC
    CRYPTO_BLOWFISH                    CRYPTO_BLOWFISH_X86_64            CRYPTO_CAMELLIA
    CRYPTO_CAMELLIA_AESNI_AVX2_X86_64  CRYPTO_CAMELLIA_AESNI_AVX_X86_64  CRYPTO_CAMELLIA_X86_64
    CRYPTO_CAST5                       CRYPTO_CAST5_AVX_X86_64           CRYPTO_CAST6
    CRYPTO_CAST6_AVX_X86_64            CRYPTO_CBC                        CRYPTO_CCM
    CRYPTO_CHACHA20                    CRYPTO_CHACHA20_X86_64            CRYPTO_CMAC
    CRYPTO_CRC32
    CRYPTO_CRC32_PCLMUL                CRYPTO_CRCT10DIF                  CRYPTO_CRCT10DIF_PCLMUL
    CRYPTO_CRYPTD                      CRYPTO_CTR                        CRYPTO_CTS
    CRYPTO_DEFLATE                     CRYPTO_DES                        CRYPTO_DES3_EDE_X86_64
    CRYPTO_DH                          CRYPTO_DRBG_MENU                  CRYPTO_ECB
    CRYPTO_ECDH                        CRYPTO_FCRYPT                     CRYPTO_FIPS
    CRYPTO_GCM                         CRYPTO_LIB_GF128MUL               CRYPTO_GHASH
    CRYPTO_POLYVAL_CLMUL_NI
    CRYPTO_GHASH_CLMUL_NI_INTEL        CRYPTO_HMAC                       CRYPTO_HW
    CRYPTO_JITTERENTROPY               CRYPTO_KHAZAD                     CRYPTO_KPP
    CRYPTO_KPP2                        CRYPTO_LRW                        CRYPTO_LZ4
    CRYPTO_LZ4HC                       CRYPTO_LZO                        CRYPTO_MANAGER
    CRYPTO_MANAGER2                    CRYPTO_MD4                        CRYPTO_MD5
    CRYPTO_MICHAEL_MIC                 CRYPTO_NULL                       CRYPTO_PCBC
    CRYPTO_PCRYPT                      CRYPTO_POLY1305                   CRYPTO_POLY1305_X86_64
    CRYPTO_RMD160
    CRYPTO_RNG_DEFAULT                CRYPTO_RSA
    CRYPTO_SEED
    CRYPTO_SEQIV                       CRYPTO_SERPENT                    CRYPTO_SERPENT_AVX2_X86_64
    CRYPTO_SERPENT_AVX_X86_64          CRYPTO_SERPENT_SSE2_X86_64        CRYPTO_SHA1
    CRYPTO_SHA1_SSSE3                  CRYPTO_SHA256                     CRYPTO_SHA256_SSSE3
    CRYPTO_SHA3                        CRYPTO_SHA512                     CRYPTO_SHA512_SSSE3
    CRYPTO_TEA                         CRYPTO_TEST
    CRYPTO_TWOFISH                     CRYPTO_TWOFISH_AVX_X86_64         CRYPTO_TWOFISH_X86_64
    CRYPTO_TWOFISH_X86_64_3WAY         CRYPTO_USER                       CRYPTO_USER_API_AEAD
    CRYPTO_USER_API_HASH               CRYPTO_USER_API_RNG               CRYPTO_USER_API_SKCIPHER
    CRYPTO_VMAC                        CRYPTO_WP512                      CRYPTO_XCBC
    CRYPTO_XTS
    CRYPTO_SM3
    ASYMMETRIC_KEY_TYPE CRYPTO_SM4
    CRYPTO_AEGIS128 CRYPTO_AEGIS128_AESNI_SSE2
    SYSTEM_BLACKLIST_KEYRING
    CRYPTO_ECRDSA CRYPTO_NHPOLY1305_SSE2 CRYPTO_NHPOLY1305_AVX2 CRYPTO_ADIANTUM CRYPTO_STREEBOG
    CRYPTO_HCTR2
    CRYPTO_XXHASH
    CRYPTO_ESSIV
    CRYPTO_AES CRYPTO_AES_TI CRYPTO_BLAKE2B
    CRYPTO_BLAKE2S_X86 CRYPTO_CURVE25519 CRYPTO_CURVE25519_X86
    CRYPTO_KEYWRAP CRYPTO_LIB_CHACHA
    CRYPTO_LIB_CHACHA20POLY1305 CRYPTO_LIB_CURVE25519
    CRYPTO_ARIA
    CRYPTO_LIB_POLY1305 CRYPTO_SM2
    CRYPTO_ECDSA
    CRYPTO_SM4_AESNI_AVX_X86_64
    CRYPTO_SM4_AESNI_AVX2_X86_64
    CRYPTO_SM3_AVX_X86_64
    CRC64_ROCKSOFT
    CRYPTO_SM3_GENERIC
    CRYPTO_SM4_GENERIC
    CRYPTO_ARIA_AESNI_AVX_X86_64
    CRYPTO_ARIA_AESNI_AVX2_X86_64
    CRYPTO_ARIA_GFNI_AVX512_X86_64
    # NOTE: this is the zstd *compressor* (write new zstd).
    #       The zstd *decompressor* (read existing zstd) is elsewhere.
    CRYPTO_ZSTD

[→ Virtualization]
SHOULD NOT = virtualization

[→ Library routines]
SHOULD NOT =
    cordic crc16 crc7 crc8 crc_ccitt crc_t10dif libcrc32c irq_poll
    crc64 dimlib
    xz_dec_microlzma
    xz_dec_arm64
    xz_dec_riscv
    # You still get *a* font, it just isn't Terminus.
    fonts



# For some fucking reason, no matter what,
# these keep getting built in 6.0.3+ (since 5.19.11).
# If I put "MUST NOT = crc8", it aborts the build.
# But the other two don't... even though they should.
# I hate this, but it isn't important enough to spend more time on.
# --twb, May 2023
#
#    kernel/drivers/hwmon/sht3x.ko
#    kernel/drivers/hwmon/sht4x.ko
#    kernel/lib/crc8.ko
[FUCK YOU WHY IS THIS NOT WORKING]
MUST NOT =
  sensors_sht3x
  sensors_sht4x
SHOULD NOT =
  crc8


# Keeping these in the list purely for historical record.
[Subsequently removed upstream]
MUST NOT =
    # v4.2  https://github.com/torvalds/linux/commit/4a72a7af462de09a2f6ef2bafd08878062b3cb5d    i2o
    # v4.6  https://github.com/torvalds/linux/commit/110492183c4b8f572b16fce096b9d78e2da30baf    crypto_zlib
    # v4.6  https://github.com/torvalds/linux/commit/3765dc92cb1ce1615538216c7870fcfbc026c714    wimax_gdm72xx
    # v4.8  https://github.com/torvalds/linux/commit/a335aaf3125c02a47bc108e9f4c6cb66ca84ce46    usb_led
    # v4.15 https://github.com/torvalds/linux/commit/8633ef82f101c040427b57d4df7b706261420b94    x86_sysfb
    # v4.16 https://github.com/torvalds/linux/commit/e455b69ddf9b69326d0cab28d374faf3325489c9    mfd_rtsx_pci mfd_rtsx_usb
    # v4.17 https://github.com/torvalds/linux/commit/d64c2a76123f0300b08d0557ad56e9d599872a36    irda
    # v5.3  https://github.com/torvalds/linux/commit/6a80b30086b861b2591ba2a953042abd08c498e3    fmc
    # v5.4  https://github.com/torvalds/linux/commit/015664d15270a112c2371d812f03f7c579b35a73    usb_rio500
    # v5.4  https://github.com/torvalds/linux/commit/1d2c3279311e4f03fcf164e1366f2fda9f4bfccf    crypto_aes_x86_64
    # v5.4  https://github.com/torvalds/linux/commit/520c1993bbe620e39fd93de1a01b9e0dc0b97aa6    crypto_aegis128l crypto_aegis128l_aesni_sse2 crypto_aegis256 crypto_aegis256_aesni_sse2
    # v5.4  https://github.com/torvalds/linux/commit/5cb97700beaa005ceb2a127b6f53536a4544c9d8    crypto_morus640 crypto_morus640_sse2 crypto_morus1280 crypto_morus1280_sse2 crypto_morus1280_avx2
    # v5.7  https://github.com/torvalds/linux/commit/caa6772db4c1deb5d9add48e95d6eab50699ee5e    uwb usb_wusb_cbaf
    # v5.10 https://github.com/torvalds/linux/commit/fa687038ba7f71ab2e5ae8701eaf95c72102cd01    phy_intel_emmc
    # v5.12 https://github.com/torvalds/linux/commit/663f63ee6d9cdc68adf9afca5427e5c2b5b4ae2d    crypto_salsa20 crypto_salsa20_x86_64
    # v5.12 https://github.com/torvalds/linux/commit/87cd723f8978c59bc4e28593da45d09ebf5d92a2    crypto_tgr192
    # v5.12 https://github.com/torvalds/linux/commit/93f64202926f606d67b1095b59137f903c6ab304    crypto_rmd320
    # v5.12 https://github.com/torvalds/linux/commit/b21b9a5e0aef025aafd2c57622a5f0cb9562c886    crypto_rmd128
    # v5.12 https://github.com/torvalds/linux/commit/c15d4167f0b0465b71c0619dc30b122f1b0e5b7a    crypto_rmd256
    # v5.13 https://github.com/torvalds/linux/commit/18507b8f63101949f4a931fc904c37ea10407f7c    wimax
    # v5.14 https://github.com/torvalds/linux/commit/a558ea42c0decd088df1950bb232ac2257929281    hp_wireless
    # v5.17 https://github.com/torvalds/linux/commit/6048fdcc5f269c7f31d774c295ce59081b36e6f9    crypto_lib_blake2s
    # v5.20 https://github.com/torvalds/linux/commit/578bdaabd015b9b164842c3e8ace9802f38e7ecc    crypto_speck
    # v6.1  https://github.com/torvalds/linux/commit/1b79573de717cfabe28221a98afaa6a3ff0e7458    crypto_blake2s
    # v6.2  https://github.com/torvalds/linux/commit/61c581a46a9668747d355436bd4b2505594539bd    crypto_gf128mul
    # v6.2  https://github.com/torvalds/linux/commit/b9b01a5625b5a9e9d96d14d4a813a54e8a124f4b    random_trust_cpu random_trust_bootloader
    # v6.4  https://github.com/torvalds/linux/commit/213acadd21a080fc8cda8eebe6d14cc2d4ad1332    usb_u132_hcd
    # v6.4  https://github.com/torvalds/linux/commit/721da5cee9d43901105f5b8bd33fcb9101b12fc3    sysfs_deprecated sysfs_deprecated_v2
    # v6.4  https://github.com/torvalds/linux/commit/8be174835f07b2c106b9961c0775486d06112a3c    usb_ftdi_elan
    # v6.8  https://github.com/torvalds/linux/commit/412ac51ce0b8c5581b6ff57fff6501e905a5471f    crypto_cfb crypto_ofb
SHOULD =
    # v5.7  https://github.com/torvalds/linux/commit/e32a4dc6512ce3c1a1920531246e7037896e510a    nf_tables_set
    # v5.17 https://github.com/torvalds/linux/commit/023223dfbfb34fcc9b7dd41e21fbf9a5d5237989    nft_counter
    # v6.2  https://github.com/torvalds/linux/commit/d037abc2414b4539401e0e6aa278bedc4628ad69    nft_objref
SHOULD NOT =
    # NOTE: allow_lockdown_lift_by_sysrq was part of a feature related to EFI secure boot.
    #       It was tested in Debian/Ubuntu *before* it reached the mainline kernel, e.g.
    #           https://snapshot.debian.org/archive/debian-debug/20200105T210228Z/pool/main/l/linux/linux_5.4.8-1.debian.tar.xz
    #           debian/patches/features/all/lockdown/add-a-sysrq-option-to-lift-kernel-lockdown.patch
    #       By the time the lockdown patchset was merged into the mainline kernel, the "disable via sysrq" patch was removed.
    #       This is due to https://bugs.debian.org/947021 (root can disable lockdown without physical access).
    #       This patch is also removed from Debian kernels 5.5.13 and later.
    #       https://patchwork.kernel.org/project/linux-security-module/patch/150842464774.7923.7951986297563109339.stgit@warthog.procyon.org.uk/
    #       https://lkml.org/lkml/2019/9/10/856
    #       Thanks to zeha on #debian-rant for helping with the forensics.
    # NOTE: aufs was also never accepted into mainline, but
    #       was in debian/patches from 2.6.31 through 5.16.
    # v3.16 https://github.com/torvalds/linux/commit/00d8521dcd236d1b8f664f54a0309e96bfdcb4f9    rts5139
    # v3.17 https://github.com/torvalds/linux/commit/5c0ed8cdc4544a94fa6d1ea3797fcc6a4bd22010    crystalhd
    # v3.17 https://github.com/torvalds/linux/commit/94723bfa7bf1b647fe49c9717ee02e99d7a59957    hid_lenovo_tpkbd
    # v3.17 https://github.com/torvalds/linux/commit/e87b540be2dd02552fb9244d50ae8b4e4619a34b    ir_rc5_sz_decoder
    # v3.17 https://github.com/torvalds/linux/commit/c309b35171ddb5384cc3f2f9dc82a96dccc6b7f6    scsi_multi_lun
    # v3.17 https://github.com/torvalds/linux/commit/16acf5d786a2d5f34533694296a47619c7d55a13    scsi_tgt
    # v3.19 https://github.com/torvalds/linux/commit/5db66334a7e83cda70fb6193dcaa2590da3a1b7d    pci_ioapic
    # v3.19 https://github.com/torvalds/linux/commit/5b1efc027c0b51ca3e76f4e00c83358f8349f543    resource_counters
    # v4.0  https://github.com/torvalds/linux/commit/ccddbe4a99536154e61d16c0f1c2df8a6d63f52a    line6_usb
    # v4.1  https://github.com/torvalds/linux/commit/08177f40bd00cd5232c0508e92a62f69cad9467f    hid_huion
    # v4.1  https://github.com/torvalds/linux/commit/1bd187de536494a27925902b9653e9ef0ace4774    serial_mfd_hsu
    # v4.3  https://github.com/torvalds/linux/commit/f4e774f55fe0bb568a0877b2eb9e1b4b5a6f5cbc    average
    # v4.3  https://github.com/torvalds/linux/commit/730daa164e7c7e31c08fab940549f4acc3329432    security_yama_stacked
    # v4.4  https://github.com/torvalds/linux/commit/f1a454a37618b819f2528ccd234f77a02b3a6016    ip1000
    # v4.7  https://github.com/torvalds/linux/commit/5d8813271f8a7c86027afb2ef554f2a5a9ba7c15    acpi_initrd_table_override
    # v4.8  https://github.com/torvalds/linux/commit/7ef9153d9af5fe7ce32dcc0f558bfcfc3d2b3016    sensors_bh1780
    # v4.10 https://github.com/torvalds/linux/commit/b65ce83f2a607ad478c5492812f5f218e8d57a6b    i7300_idle
    # v4.10 https://github.com/torvalds/linux/commit/1d0fd57a50aa372dd2e84b16711023cbcd826cb8    logfs
    # v4.11 https://github.com/torvalds/linux/commit/dfb4357da6ddbdf57d583ba64361c9d792b0e0b1    timer_stats
    # v4.12 https://github.com/torvalds/linux/commit/e3c4ff6d8c949fa9a9ea1bd005bf1967efe09d5d    edac_mm_edac
    # v4.14 https://github.com/torvalds/linux/commit/253d2464df446456c0bba5ed4137a7be0b278aa8    blk_cpq_ciss_da
    # v4.15 https://github.com/torvalds/linux/commit/4675ff05de2d76d167336b368bd07f3fef6ed5a6    kmemcheck
    # v4.16 https://github.com/torvalds/linux/commit/a60d64b15c20d178ba3a9bc3a542492b4ddeea70    ir_lirc_codec
    # v4.16 https://github.com/torvalds/linux/commit/f95367a7b7585fd9123f417d09ed5b2febe773a1    lirc_staging
    # v4.18 https://github.com/torvalds/linux/commit/7a2e838d28cff6718a0bdf66164465402f8e40ed    ipx
    # v4.18 https://github.com/torvalds/linux/commit/be65f9ed267fd7d8b3146b7c4be9ecdd3e0aa3ed    lustre_fs lnet
    # v4.18 https://github.com/torvalds/linux/commit/bd32895c750bcd2b511bf93917bf7ae723e3d0b6    ncp_fs
    # v4.18 https://github.com/torvalds/linux/commit/2a61f4747eeaa85ce26ca9fbd81421b15facd018    stackprotector_none
    # v4.19 https://github.com/torvalds/linux/commit/0df5f81c481e383f37f9f97eb014c885898b1773    net_cadence net_packet_engine
    # v4.19 https://github.com/torvalds/linux/commit/d39db3b4d60c9bc4282b36753a7255d2a5ef0384    net_vendor_exar
    # v4.20 https://github.com/torvalds/linux/commit/6956b956934f10c19eca2a1d44f50a3bee860531    blk_dev_dac960
    # v5.0  https://github.com/torvalds/linux/commit/f382fb0bcef4c37dc049e9f6963e3baf204d815c    iosched_deadline
    # v5.1  https://github.com/torvalds/linux/commit/80f2121380caa14895638b24b81800158c0844f2    exofs_fs
    # v5.1  https://github.com/torvalds/linux/commit/19fcae3d4f2dd513d472055fb694d802e9a21b91    scsi_osd_initiator
    # v5.2  https://github.com/torvalds/linux/commit/a9520543b123bbd7275a0ab8d0375a5412683b41    asix_phy
    # v5.2  https://github.com/torvalds/linux/commit/4c145dce26013763490df88f2473714f5bc7857d    inet_xfrm_mode_beet inet_xfrm_mode_transport inet_xfrm_mode_tunnel
    # v5.3  https://github.com/torvalds/linux/commit/4e3ea141b5cb79ded7f4a67bb32e5b23a06a784a    chr_dev_osst
    # v5.3  https://github.com/torvalds/linux/commit/f50dfaf772db187deb562764e7aa3b988d6bc538    usb_switch_fsa9480
    # v5.4  https://github.com/torvalds/linux/commit/2c9d5b5e32a2516ae9b1120c7688ea25ffee7805    sensors_ads1015
    # v5.4  https://github.com/torvalds/linux/commit/f7bc6e42bf12487182fc442a08eca25d968dc543    sgi_ioc4
    # v5.5  https://github.com/torvalds/linux/commit/90dc392fc445ee2fc17c2617e306774b269386ac    calgary_iommu
    # v5.6  https://bugs.debian.org/947021                                                       allow_lockdown_lift_by_sysrq
    # v5.6  https://github.com/torvalds/linux/commit/710b65335c19eea696741eb2d5e45a39aa23d0bb    i2c_parport_light
    # v5.6  https://github.com/torvalds/linux/commit/690ac0d20d4022bb3c7d84e0e3760eb40aa8028d    thunderbolt
    # v5.7  https://github.com/torvalds/linux/commit/679b2ec8e060ca7a90441aff5e7d384720a41b76    blk_dev_sr_vendor
    # v5.7  https://github.com/torvalds/linux/commit/a10079c6629068b906de5c944cb0e9bcc9517a7e    net_vendor_hp
    # v5.7  https://github.com/torvalds/linux/commit/590a95e418d18894e34cd240b3e7ef278add05c7    staging_exfat_fs
    # v5.9  https://github.com/torvalds/linux/commit/7d2594cd1fa0b03b2746ce811926ee150a3a14fa    mfd_smsc
    # v5.10 https://github.com/torvalds/linux/commit/80ade22c06ca115b81dd168e99479c8e09843513    intel_mic_bus intel_mic_host scif_bus vop_bus
    # v5.10 https://github.com/torvalds/linux/commit/2fa4e4b799e191530edbae4b96b85d4486e55053    mdio_xpcs
    # v5.11 https://github.com/torvalds/linux/commit/278b13ce3a89698711c5a67792ba2dba41555433    input_polldev
    # v5.11 https://github.com/torvalds/linux/commit/3d608a591b2b6a2cd81d6258df6d1766db05567e    synclink
    # v5.12 https://github.com/torvalds/linux/commit/ee8f353b1591cef4a29cddeb379c1503559f474e    blk_dev_skd
    # v5.12 https://github.com/torvalds/linux/commit/aecb925db7085265595e79fc3feccd184d14464b    intel_mid_power_button
    # v5.12 https://github.com/torvalds/linux/commit/ef3c67b6454b8f542f50387ad481633ae30874ac    mfd_intel_msic
    # v5.12 https://github.com/torvalds/linux/commit/19038523a7353e7413c5428f20376fa3ccd2c8e9    net_vendor_aurora
    # v5.12 https://github.com/torvalds/linux/commit/4590d98f5a4f466d17e5c81d7c9fc796da9a8cee    sfi
    # v5.13 https://github.com/torvalds/linux/commit/14d97622448acbea0348be62f62e25d9a361e16b    blk_dev_umem
    # v5.13 https://github.com/torvalds/linux/commit/f76edd8f7ce06cdff2fe5b6b39a49644c684a161    cyclades
    # v5.13 https://github.com/torvalds/linux/commit/67b1544a55c94b62f68488d5fcbc93cca293dc32    isi
    # v5.13 https://github.com/torvalds/linux/commit/1510618e45cb9fb77aede5544f8309b64f8b7400    nf_log_netdev
    # v5.13 https://github.com/torvalds/linux/commit/3b00b6af7a5bd7fd7e5189ccaad0e0cfb7dc7785    rocketport
    # v5.13 https://github.com/torvalds/linux/commit/9049572fb145746725b198a19e27fa2671b80448    sensors_amd_energy
    # v5.13 https://github.com/torvalds/linux/commit/918ce05bbe52df43849a803010b4d2bcd31ea69c    staging_gasket_framework
    # v5.14 https://github.com/torvalds/linux/commit/24700e1f41f0dcbe389b8d9e5830aaca2192093c    mfd_tps68470
    # v5.14 https://github.com/torvalds/linux/commit/ed5aecd3da2eabd8a6c9f5593df2c4f00985fca2    r3964
    # v5.14 https://github.com/torvalds/linux/commit/603e4922f1c81fc2ed3a87b4f91a8d3aafc7e093    raw_driver
    # v5.16 https://salsa.debian.org/kernel-team/linux/-/blob/debian/5.16.11-1_bpo11+1/debian/changelog?ref_type=tags#L801    aufs_export
    # v5.16 https://github.com/torvalds/linux/commit/b4d89579ccb1ad5ffcdb3430933ce1e31a009ec7    gcc_plugin_cyc_complexity
    # v5.16 https://github.com/torvalds/linux/commit/323fd5955f844d1b6acf1a1af488da460f657ff2    icst
    # v5.16 https://github.com/torvalds/linux/commit/95f4325de9e612918468f7e6bda633223bae793f    ir_sir
    # v5.16 https://github.com/torvalds/linux/commit/b20cd02f7fef68ae395d9df0a9fb9edcf414b5a2    mfd_tps80031
    # v5.17 https://github.com/torvalds/linux/commit/3427f2b2c533d97bcc57b4237c2af21a8bd2cdbc    blk_dev_rsxx
    # v5.18 https://github.com/torvalds/linux/commit/83a44a4f47ad20997aebb311fc678a13cde391d7    x86_x32
    # v6.0  https://github.com/torvalds/linux/commit/d13bc4d84a8e91060d3797fc95c1a0202bfd1499    blk_dev_sx8
    # v6.0  https://github.com/torvalds/linux/commit/920b0442b9f884f55f4745b53430c80e71e90275    memneq
    # v6.1  https://github.com/torvalds/linux/commit/1202cdd665315c525b5237e96e0bedc76d7e754f    decnet
    # v6.1  https://github.com/torvalds/linux/commit/7033b937e21b12629d920e7864c20c46bc4ccf39    lib_memneq
    # v6.1  https://github.com/torvalds/linux/commit/1bce56b25a004b12b5d97b9b8452f451c8a76677    sensors_asus_wmi_ec
    # v6.2  https://github.com/torvalds/linux/commit/707857d997ae39743eba939a5b3aaafbab04fa78    htc_i2cpld
    # v6.3  https://github.com/torvalds/linux/commit/e65e175b07bef5974045cc42238de99057669ca7    habana_ai
    # v6.4  https://github.com/torvalds/linux/commit/e485f3a6eae0849f83b94936778a2325f72a0c89    ixgb
    # v6.4  https://github.com/torvalds/linux/commit/772cbba5a877eb7c528f3659415373c40e48a057    peaq_wmi
    # v6.5  https://github.com/torvalds/linux/commit/1f2190d6b7112d22d3f8dfeca16a2f6a2f51444e    autofs4_fs
    # v6.5  https://github.com/torvalds/linux/commit/06ffe5b25eeded829d5b2dd93ba868f3c75720d6    yogabook_wmi
    # v6.6  https://github.com/torvalds/linux/commit/42c06a0e8ebe95b81e5fb41c6556ff22d9255b0c    frontswap
    # v6.6  https://github.com/torvalds/linux/commit/438b805003a07606f9a9f222a7ddb7dcdb87aeaa    pstore_deflate_compress
    # v6.6  https://github.com/torvalds/linux/commit/b3af14c4c2841343584b61c49b0cfb8808764239    sensors_smm665
    # v6.7  https://github.com/torvalds/linux/commit/0113a99b8a75f307439c2950cec5b5dab818f35c    eeprom_legacy
    # v6.7  https://github.com/torvalds/linux/commit/875be090928d19ff4ae7cbaadb54707abb3befdf    qlge
    # v6.8  https://github.com/torvalds/linux/commit/98e20e5e13d2811898921f999288be7151a11954    bpfilter
    # v6.8  https://github.com/torvalds/linux/commit/94f8f319cbcbddce8f82bfaf8ed39eb57efdd457    drm_legacy
    # v6.8  https://github.com/torvalds/linux/commit/d9f25b59ed85ae45801cf45fe17eb269b0ef3038    fb_le80578
    # v6.9  https://github.com/torvalds/linux/commit/29d8568849fe5937e14f5f7763931bb2decf298d    string_selftest
    # v6.0  https://github.com/torvalds/linux/commit/1045a06724f322ed61f1ffb994427c7bdbe64647    android
